{"version":3,"sources":["hooks/use-request.js","containers/navs/Breadcrumb.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/reactstrap/es/Badge.js","views/app/client/clients/components/pagination.js","views/app/client/clients/components/context-menu-container.js","views/app/client/clients/components/data-table.js","views/app/client/clients/components/add-new-modal.js","views/app/client/clients/components/data-page-heading.js","views/app/client/clients/components/edit-modal.js","views/app/client/clients/index.js"],"names":["useRequest","url","method","data","headers","nextSuccess","nextError","initialValue","useState","responseData","setData","loading","setLoading","error","setError","a","instance","response","success","log","getMenuTitle","sub","adminRoot","id","getUrl","path","split","BreadcrumbItems","match","substr","paths","length","indexOf","filter","x","className","map","index","active","to","BreadcrumbContainer","heading","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","propTypes","color","PropTypes","string","pill","bool","tag","tagPropType","innerRef","oneOfType","object","func","children","node","cssModule","Badge","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","href","React","createElement","_extends","ref","defaultProps","Pagination","totalPage","currentPage","numberLimit","lastIsActive","firstIsActive","onChangePage","startPoint","endPoint","parseInt","points","i","push","firstPageButtonClassName","lastPageButtonClassName","prevPageButtonClassName","nextPageButtonClassName","xxs","Nav","NavItem","NavLink","onClick","ContextMenuContainer","onContextMenu","onContextMenuClick","showButtons","showAdd","showEdit","onShow","e","detail","style","borderRadius","action","genderOptions","value","label","getGenderText","gender","find","TableItem","item","isSelect","collect","onCheckItem","email","first_name","last_name","phone_number","pathname","useLocation","Card","event","classnames","title","collectData","DataTable","items","selectedItems","Row","includes","INIT_STATE","address","city","date_of_birth","getDateWithFormat","Date","ethinicity","emergency_phone_number","connect","authUser","clientsApp","accessToken","filters","getClientsAction","getClients","modalOpen","toggleModal","values","setValues","handleChange","target","Authorization","NotificationManager","wait","doRequest","Modal","isOpen","toggle","size","backdrop","ModalHeader","IntlMessages","ModalBody","Label","Input","required","onChange","dateFormat","showYearDropdown","showMonthDropdown","selected","maxDate","date","newDate","key","isClearable","classNamePrefix","newData","options","pattern","placeholder","type","rows","ModalFooter","Button","outline","TableHeading","DataPageHeading","changeOrderBy","changePageSize","selectedPageSize","totalItemCount","selectedOrderOption","startIndex","endIndex","onSearchKey","orderOptions","pageSizes","isSuperAdmin","displayOptionsIsOpen","setDisplayOptionsIsOpen","API_URI","Breadcrumb","Collapse","UncontrolledDropdown","DropdownToggle","caret","DropdownMenu","order","DropdownItem","column","name","onKeyPress","right","currentUserData","_gender","useEffect","placeholderText","getIndex","prop","currentUser","clients","message","updateFiltersAction","updateClientFilters","search","totalItems","client_add","client_edit","is_superadmin","addModalOpen","setAddModalOpen","editModalOpen","setEditModalOpen","setSelectedItems","lastChecked","setLastChecked","undefined","state","selectedItem","setSelectedItem","newSelectedOrderOption","newSelectedPageSize","selectedItemsLength","itemsLength","query","toLowerCase","tagName","parentElement","selectedList","shiftKey","newItems","start","end","slice","Math","min","max","Set","document","activeElement","blur","clickedProductId","newCurrentPage"],"mappings":"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","file":"static/js/views-client-all.c59ef2f3.chunk.js","sourcesContent":["import { useState } from 'react';\nimport instance from '../helpers/axiosInstance';\nimport { log } from '../helpers/Utils';\n\nconst useRequest = ({\n  url,\n  method,\n  data,\n  headers,\n  nextSuccess,\n  nextError,\n  initialValue = '',\n}) => {\n  const [responseData, setData] = useState(initialValue);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const doRequest = async () => {\n    try {\n      setError(null);\n      setLoading(true);\n      const response = await instance({\n        url,\n        method,\n        headers,\n        data,\n      });\n\n      if (response.data.success) {\n        setData(response.data.data);\n        if (nextSuccess) {\n          nextSuccess(response.data.data, setData);\n        }\n        setLoading(false);\n      } else {\n        if (nextError) {\n          nextError(response.data.error);\n        }\n        setLoading(false);\n        setError(response.data.error);\n      }\n    } catch (err) {\n      log(err);\n      setLoading(false);\n      setError(err);\n    }\n  };\n\n  return [doRequest, loading, error, responseData];\n};\n\nexport default useRequest;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { adminRoot } from '../../constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      <BreadcrumbItems match={match} />\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/');\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  color: PropTypes.string,\n  pill: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  color: 'secondary',\n  pill: false,\n  tag: 'span'\n};\n\nvar Badge = function Badge(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      innerRef = props.innerRef,\n      pill = props.pill,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"innerRef\", \"pill\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'badge', 'badge-' + color, pill ? 'badge-pill' : false), cssModule);\n\n  if (attributes.href && Tag === 'span') {\n    Tag = 'a';\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nBadge.propTypes = propTypes;\nBadge.defaultProps = defaultProps;\nexport default Badge;","import React from 'react';\nimport { Nav, NavItem, NavLink } from 'reactstrap';\nimport { Colxx } from '../../../../../components/common/CustomBootstrap';\n\nconst Pagination = ({\n  totalPage = 0,\n  currentPage = 1,\n  numberLimit = 5,\n  lastIsActive = true,\n  firstIsActive = true,\n  onChangePage,\n}) => {\n  let startPoint = 1;\n  let endPoint = numberLimit;\n\n  if (numberLimit > totalPage) {\n    startPoint = 1;\n    endPoint = totalPage;\n  } else if (currentPage <= parseInt(numberLimit / 2, 10)) {\n    startPoint = 1;\n    endPoint = numberLimit;\n  } else if (currentPage + parseInt(numberLimit / 2, 10) <= totalPage) {\n    startPoint = currentPage - parseInt(numberLimit / 2, 10);\n    endPoint = currentPage + parseInt(numberLimit / 2, 10);\n  } else {\n    startPoint = totalPage - (numberLimit - 1);\n    endPoint = totalPage;\n  }\n  startPoint = startPoint === 0 ? 1 : startPoint;\n  const points = [];\n  for (let i = startPoint; i <= endPoint; i += 1) {\n    points.push(i);\n  }\n\n  const firstPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\n  const lastPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\n  const prevPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\n  const nextPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\n  return totalPage > 1 ? (\n    <Colxx xxs=\"12\" className=\"mt-3 mb-3\">\n      <Nav className=\"pagination justify-content-center\">\n        {firstIsActive && (\n          <NavItem className={`page-item ${firstPageButtonClassName}`}>\n            <NavLink\n              className=\"page-link first c-pointer\"\n              onClick={() => onChangePage(1)}\n            >\n              <i className=\"simple-icon-control-start\" />\n            </NavLink>\n          </NavItem>\n        )}\n\n        <NavItem className={`page-item ${prevPageButtonClassName}`}>\n          <NavLink\n            className=\"page-link prev c-pointer\"\n            onClick={() => onChangePage(currentPage - 1)}\n          >\n            <i className=\"simple-icon-arrow-left\" />\n          </NavLink>\n        </NavItem>\n        {points.map((i) => {\n          return (\n            <NavItem\n              key={i}\n              className={`page-item ${currentPage === i && 'active'}`}\n            >\n              <NavLink\n                className=\"page-link c-pointer\"\n                onClick={() => onChangePage(i)}\n              >\n                {i}\n              </NavLink>\n            </NavItem>\n          );\n        })}\n        <NavItem className={`page-item ${nextPageButtonClassName}`}>\n          <NavLink\n            className=\"page-link next c-pointer\"\n            onClick={() => onChangePage(currentPage + 1)}\n          >\n            <i className=\"simple-icon-arrow-right\" />\n          </NavLink>\n        </NavItem>\n        {lastIsActive && (\n          <NavItem className={`page-item ${lastPageButtonClassName}`}>\n            <NavLink\n              className=\"page-link last c-pointer\"\n              onClick={() => onChangePage(totalPage)}\n            >\n              <i className=\"simple-icon-control-end\" />\n            </NavLink>\n          </NavItem>\n        )}\n      </Nav>\n    </Colxx>\n  ) : (\n    <Colxx xxs=\"12\" className=\"mt-2\" />\n  );\n};\n\nexport default Pagination;\n","import React from 'react';\nimport { ContextMenu, MenuItem } from 'react-contextmenu';\n\nconst ContextMenuContainer = ({\n  onContextMenu,\n  onContextMenuClick,\n  showButtons,\n}) => {\n  const { showAdd, showEdit } = showButtons;\n\n  if (!(showAdd && showEdit)) return null;\n\n  return (\n    <ContextMenu\n      id=\"menu_id\"\n      onShow={(e) => onContextMenu(e, e.detail.data)}\n      style={{ borderRadius: '16px' }}\n    >\n      {showEdit && (\n        <MenuItem\n          onClick={onContextMenuClick}\n          data={{ action: 'edit' }}\n          className=\"text-primary\"\n        >\n          <i className=\"simple-icon-pencil\" /> <span>Edit</span>\n        </MenuItem>\n      )}\n      {showAdd && (\n        <MenuItem\n          onClick={onContextMenuClick}\n          data={{ action: 'create-new' }}\n          className=\"text-primary\"\n        >\n          <i className=\"simple-icon-plus\" /> <span>Add New</span>\n        </MenuItem>\n      )}\n    </ContextMenu>\n  );\n};\n\nexport default ContextMenuContainer;\n","/* eslint-disable camelcase */\nimport React from 'react';\nimport { Badge, Card, Row } from 'reactstrap';\nimport classnames from 'classnames';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { NavLink, useLocation } from 'react-router-dom';\n\nimport { Colxx } from '../../../../../components/common/CustomBootstrap';\n\nimport Pagination from './pagination';\nimport ContextMenuContainer from './context-menu-container';\n\nconst genderOptions = [\n  { value: 'male', label: 'Male' },\n  { value: 'female', label: 'Female' },\n];\n\nconst getGenderText = (gender) => {\n  const genderValue = genderOptions.find(({ value }) => value === gender);\n  return genderValue.label;\n};\n\nconst TableItem = ({ item, isSelect, collect, onCheckItem }) => {\n  const { id, email, first_name, last_name, phone_number, gender } = item;\n\n  const { pathname } = useLocation();\n\n  return (\n    <Colxx xxs=\"12\" className=\"mb-3\">\n      <ContextMenuTrigger id=\"menu_id\" data={item} collect={collect}>\n        <Card\n          onClick={(event) => onCheckItem(event, id)}\n          className={classnames('d-flex flex-row', {\n            active: isSelect,\n          })}\n        >\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\n            <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\n              <p className=\"list-item-heading mb-1 truncate w-30 w-sm-100\">\n                {first_name} {last_name}\n              </p>\n              <p className=\"mb-0 w-20 text-center w-sm-100\">{email}</p>\n              <p className=\"mb-0 w-20 text-center w-sm-100\">{phone_number}</p>\n              <p className=\"mb-0 w-20 text-center w-sm-100\">\n                {getGenderText(gender)}\n              </p>\n              <p className=\"mb-0 w-10 w-sm-100 text-center align-itms-end\">\n                <NavLink\n                  to={`${pathname}/${id}`}\n                  className=\"mb-0\"\n                  title=\"See More\"\n                >\n                  <Badge color=\"primary\" pill>\n                    More\n                  </Badge>\n                </NavLink>\n              </p>\n            </div>\n          </div>\n        </Card>\n      </ContextMenuTrigger>\n    </Colxx>\n  );\n};\n\nfunction collectData(props) {\n  return { data: props.data };\n}\n\nconst DataTable = ({\n  items,\n  selectedItems,\n  onCheckItem,\n  currentPage,\n  totalPage,\n  onContextMenuClick,\n  onContextMenu,\n  onChangePage,\n  showAdd,\n  showEdit,\n}) => {\n  return (\n    <Row>\n      {items.map((item) => (\n        <TableItem\n          key={item.id}\n          item={item}\n          isSelect={selectedItems.includes(item.id)}\n          onCheckItem={onCheckItem}\n          collect={collectData}\n        />\n      ))}\n      <Pagination\n        currentPage={currentPage}\n        totalPage={totalPage}\n        onChangePage={(i) => onChangePage(i)}\n      />\n      <ContextMenuContainer\n        onContextMenuClick={onContextMenuClick}\n        onContextMenu={onContextMenu}\n        showButtons={{ showAdd, showEdit }}\n      />\n    </Row>\n  );\n};\n\nexport default DataTable;\n","/* eslint-disable prefer-promise-reject-errors */\nimport React, { useState } from 'react';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  Label,\n  Row,\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport DatePicker from 'react-datepicker';\nimport Select from 'react-select';\n\nimport IntlMessages from '../../../../../helpers/IntlMessages';\nimport { Colxx } from '../../../../../components/common/CustomBootstrap';\n\nimport { getDateWithFormat, log, wait } from '../../../../../helpers/Utils';\nimport { NotificationManager } from '../../../../../components/common/react-notifications';\nimport { getClients } from '../../../../../redux/actions';\nimport useRequest from '../../../../../hooks/use-request';\n\nconst genderOptions = [\n  { value: 'male', label: 'Male' },\n  { value: 'female', label: 'Female' },\n];\n\nconst INIT_STATE = () => ({\n  address: '',\n  city: '',\n  date_of_birth: getDateWithFormat(new Date()),\n  email: '',\n  first_name: '',\n  gender: '',\n  last_name: '',\n  ethinicity: '',\n  phone_number: '',\n  emergency_phone_number: '',\n});\n\nconst AddNewModal = ({\n  modalOpen,\n  toggleModal,\n  accessToken,\n  filters,\n  getClientsAction,\n}) => {\n  const [values, setValues] = useState(INIT_STATE);\n\n  const handleChange = (event) => {\n    log({ [event.target.id]: event.target.value });\n    setValues({ ...values, [event.target.id]: event.target.value });\n  };\n\n  const handleDateChange = (newDate, key) => {\n    setValues({ ...values, [key]: getDateWithFormat(newDate) });\n  };\n\n  const [doRequest, loading] = useRequest({\n    url: '/client/add-client',\n    method: 'POST',\n    headers: {\n      Authorization: accessToken,\n    },\n    data: values,\n    nextSuccess: () => {\n      NotificationManager.success(\n        'Client Added Successfully',\n        'Client Operation Success',\n        3000,\n        null,\n        null,\n        ''\n      );\n      getClientsAction(accessToken, filters);\n      wait(1200, () => {\n        setValues(INIT_STATE);\n        toggleModal(false);\n      });\n    },\n    nextError: (error) => {\n      NotificationManager.error(\n        error,\n        'Client Operation Error',\n        3000,\n        null,\n        null,\n        ''\n      );\n    },\n  });\n\n  const handleSelectChange = (newData) => {\n    setValues({ ...values, gender: newData.value });\n  };\n\n  const handleSubmit = () => {\n    doRequest();\n  };\n\n  return (\n    <Modal\n      isOpen={modalOpen}\n      toggle={() => {\n        toggleModal();\n        setValues(INIT_STATE);\n      }}\n      size=\"lg\"\n      backdrop=\"static\"\n    >\n      <ModalHeader\n        toggle={() => {\n          toggleModal();\n          setValues(INIT_STATE);\n        }}\n      >\n        <IntlMessages id=\"pages.add-new-client-modal-title\" />\n      </ModalHeader>\n      <ModalBody>\n        <Row>\n          <Colxx>\n            <Label className=\"mt-4\">\n              <IntlMessages id=\"pages.client-first-name\" />\n            </Label>\n            <Input\n              id=\"first_name\"\n              value={values.first_name}\n              required\n              onChange={handleChange}\n            />\n          </Colxx>\n          <Colxx>\n            <Label className=\"mt-4\">\n              <IntlMessages id=\"pages.client-last-name\" />\n            </Label>\n            <Input\n              id=\"last_name\"\n              value={values.last_name}\n              required\n              onChange={handleChange}\n            />\n          </Colxx>\n        </Row>\n\n        <Row>\n          <Colxx>\n            <Label className=\"mt-4\">\n              <IntlMessages id=\"pages.client-date-of-birth\" />\n            </Label>\n            <DatePicker\n              id=\"date_of_birth\"\n              dateFormat=\"dd/MM/yyyy\"\n              showYearDropdown\n              showMonthDropdown\n              selected={new Date(values.date_of_birth)}\n              maxDate={new Date()}\n              onChange={(date) => handleDateChange(date, 'date_of_birth')}\n            />\n          </Colxx>\n          <Colxx>\n            <Label className=\"mt-4\">\n              <IntlMessages id=\"pages.client-gender\" />\n            </Label>\n            <Select\n              id=\"gender\"\n              value={genderOptions.find(({ value }) => value === values.gender)}\n              required\n              isClearable\n              className=\"react-select\"\n              classNamePrefix=\"react-select\"\n              onChange={handleSelectChange}\n              options={genderOptions}\n            />\n          </Colxx>\n        </Row>\n\n        <Row>\n          <Colxx>\n            <Label className=\"mt-4\">\n              <IntlMessages id=\"pages.client-ethinicity\" />\n            </Label>\n            <Input\n              id=\"ethinicity\"\n              value={values.ethinicity}\n              onChange={handleChange}\n            />\n          </Colxx>\n          <Colxx>\n            <Label className=\"mt-4\">\n              <IntlMessages id=\"pages.user-phone-required\" />\n            </Label>\n            <Input\n              id=\"phone_number\"\n              value={values.phone_number}\n              onChange={handleChange}\n            />\n          </Colxx>\n        </Row>\n\n        <Row>\n          <Colxx>\n            <Label className=\"mt-4\">\n              <IntlMessages id=\"pages.user-email\" />\n            </Label>\n            <Input\n              id=\"email\"\n              required\n              pattern=\"/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i\"\n              placeholder=\"example@email.com\"\n              value={values.email}\n              onChange={handleChange}\n            />\n          </Colxx>\n          <Colxx>\n            <Label className=\"mt-4\">\n              <IntlMessages id=\"pages.client-emergency-phone\" />\n            </Label>\n            <Input\n              id=\"emergency_phone_number\"\n              value={values.emergency_phone_number}\n              onChange={handleChange}\n            />\n          </Colxx>\n        </Row>\n\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"pages.client-address\" />\n        </Label>\n        <Input\n          id=\"address\"\n          type=\"textarea\"\n          rows=\"6\"\n          value={values.address}\n          onChange={handleChange}\n        />\n\n        <Row>\n          <Colxx>\n            <Label className=\"mt-4\">\n              <IntlMessages id=\"pages.client-city\" />\n            </Label>\n            <Input id=\"city\" value={values.city} onChange={handleChange} />\n          </Colxx>\n        </Row>\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"danger\" outline onClick={toggleModal}>\n          <IntlMessages id=\"pages.cancel\" />\n        </Button>\n        <Button\n          id=\"add-new-user\"\n          color=\"primary\"\n          className={`btn-shadow btn-multiple-state ${\n            loading ? 'show-spinner' : ''\n          }`}\n          onClick={handleSubmit}\n        >\n          <span className=\"spinner d-inline-block\">\n            <span className=\"bounce1\" />\n            <span className=\"bounce2\" />\n            <span className=\"bounce3\" />\n          </span>\n          <span className=\"label\">\n            <IntlMessages id=\"pages.submit\" />\n          </span>\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = ({ authUser, clientsApp }) => {\n  const { accessToken } = authUser;\n  const { filters } = clientsApp;\n  return { accessToken, filters };\n};\n\nexport default connect(mapStateToProps, {\n  getClientsAction: getClients,\n})(AddNewModal);\n","/* eslint-disable no-unused-vars */\n/* eslint-disable react/no-array-index-key */\nimport React, { useState } from 'react';\nimport {\n  Row,\n  Button,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  Collapse,\n  Card,\n  ButtonGroup,\n  ButtonDropdown,\n  NavLink,\n} from 'reactstrap';\n\nimport Breadcrumb from '../../../../../containers/navs/Breadcrumb';\n\nimport IntlMessages from '../../../../../helpers/IntlMessages';\nimport {\n  Colxx,\n  Separator,\n} from '../../../../../components/common/CustomBootstrap';\nimport { API_URI } from '../../../../../constants/defaultValues';\n\nconst TableHeading = () => (\n  <Card className=\"d-flex flex-row mb-4\">\n    <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\n      <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\n        <p className=\"list-item-heading mb-1 truncate w-30 w-sm-100\">Name</p>\n        <p className=\"mb-1 text-muted text-center w-20 w-sm-100\">Email</p>\n        <p className=\"mb-1 text-muted text-center w-20 w-sm-100\">\n          Phone Number\n        </p>\n        <p className=\"mb-1 text-muted text-center w-20 w-sm-100\">Gender</p>\n        <div className=\"mb-1 text-muted text-center w-10 w-sm-100\">Details</div>\n      </div>\n    </div>\n  </Card>\n);\n\nconst DataPageHeading = ({\n  changeOrderBy,\n  changePageSize,\n  selectedPageSize,\n  totalItemCount,\n  selectedOrderOption,\n  match,\n  startIndex,\n  endIndex,\n  onSearchKey,\n  orderOptions,\n  pageSizes,\n  toggleModal,\n  heading,\n  showAdd,\n  isSuperAdmin,\n}) => {\n  const [displayOptionsIsOpen, setDisplayOptionsIsOpen] = useState(false);\n  const [showDropdown, setDropdown] = useState(false);\n\n  // eslint-disable-next-line no-param-reassign\n  match.path = match.url;\n\n  return (\n    <Row>\n      <Colxx xxs=\"12\">\n        <div className=\"mb-2\">\n          <h1>\n            <IntlMessages id={heading} />\n          </h1>\n\n          <div className=\"text-zero top-right-button-container\">\n            {isSuperAdmin && (\n              <Button\n                size=\"lg\"\n                color=\"primary\"\n                href={`${API_URI}/dashboard/download-client-service-report`}\n                target=\"_blank\"\n              >\n                Download Client Referral Reports\n              </Button>\n            )}\n            {isSuperAdmin && (\n              <Button\n                color=\"primary\"\n                size=\"lg\"\n                className=\"mx-2\"\n                href={`${API_URI}/dashboard/download-client-report`}\n                target=\"_blank\"\n              >\n                Download Client Reports\n              </Button>\n            )}\n            {showAdd && (\n              <Button color=\"primary\" onClick={() => toggleModal()} size=\"lg\">\n                <IntlMessages id=\"pages.add-new\" />\n              </Button>\n            )}\n          </div>\n\n          <Breadcrumb match={match} />\n        </div>\n\n        <div className=\"mb-2\">\n          <Button\n            color=\"empty\"\n            className=\"pt-0 pl-0 d-inline-block d-md-none\"\n            onClick={() => setDisplayOptionsIsOpen(!displayOptionsIsOpen)}\n          >\n            <IntlMessages id=\"pages.display-options\" />{' '}\n            <i className=\"simple-icon-arrow-down align-middle\" />\n          </Button>\n          <Collapse\n            isOpen={displayOptionsIsOpen}\n            className=\"d-md-block\"\n            id=\"displayOptions\"\n          >\n            <div className=\"d-block d-md-inline-block pt-1\">\n              <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1\">\n                <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\n                  <IntlMessages id=\"pages.orderby\" />\n                  {selectedOrderOption.label}\n                </DropdownToggle>\n                <DropdownMenu>\n                  {orderOptions.map((order, index) => {\n                    return (\n                      <DropdownItem\n                        key={index}\n                        onClick={() => changeOrderBy(order.column)}\n                      >\n                        {order.label}\n                      </DropdownItem>\n                    );\n                  })}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\n                <input\n                  type=\"text\"\n                  name=\"keyword\"\n                  id=\"search\"\n                  onKeyPress={(e) => onSearchKey(e)}\n                />\n              </div>\n            </div>\n            <div className=\"float-md-right pt-1\">\n              <span className=\"text-muted text-small mr-1\">{`${startIndex}-${endIndex} of ${totalItemCount} `}</span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\n                  {selectedPageSize}\n                </DropdownToggle>\n                <DropdownMenu right>\n                  {pageSizes.map((size, index) => {\n                    return (\n                      <DropdownItem\n                        key={index}\n                        onClick={() => changePageSize(size)}\n                      >\n                        {size}\n                      </DropdownItem>\n                    );\n                  })}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </div>\n          </Collapse>\n        </div>\n        <TableHeading />\n        <Separator className=\"mb-5\" />\n      </Colxx>\n    </Row>\n  );\n};\n\nexport default DataPageHeading;\n","/* eslint-disable no-underscore-dangle */\n/* eslint-disable camelcase */\nimport React, { useEffect, useState } from 'react';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  Label,\n  Row,\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport DatePicker from 'react-datepicker';\nimport Select from 'react-select';\n\nimport IntlMessages from '../../../../../helpers/IntlMessages';\nimport { Colxx } from '../../../../../components/common/CustomBootstrap';\n\nimport { getDateWithFormat, wait } from '../../../../../helpers/Utils';\nimport { NotificationManager } from '../../../../../components/common/react-notifications';\nimport useRequest from '../../../../../hooks/use-request';\nimport { getClients } from '../../../../../redux/actions';\n\nconst genderOptions = [\n  { value: 'male', label: 'Male' },\n  { value: 'female', label: 'Female' },\n];\n\nconst EditModal = ({\n  modalOpen,\n  currentUserData,\n  toggleModal,\n  accessToken,\n  filters,\n  getClientsAction,\n}) => {\n  const [values, setValues] = useState({\n    ...currentUserData,\n    _gender: genderOptions.find(\n      ({ value }) => value === currentUserData.gender\n    ),\n  });\n\n  const handleDateChange = (newDate, key) => {\n    setValues({ ...values, [key]: getDateWithFormat(newDate) });\n  };\n\n  useEffect(() => {\n    setValues({\n      ...currentUserData,\n      _gender: genderOptions.find(\n        ({ value }) => value === currentUserData.gender\n      ),\n    });\n  }, [currentUserData]);\n\n  const [doRequest, loading] = useRequest({\n    url: `/client/edit-client/${values.id}`,\n    method: 'PUT',\n    headers: {\n      Authorization: accessToken,\n    },\n    data: values,\n    nextSuccess: () => {\n      NotificationManager.success(\n        'Client Edited Successfully',\n        'Client Operation Success',\n        3000,\n        null,\n        null,\n        ''\n      );\n      getClientsAction(accessToken, filters);\n      wait(1200, () => {\n        setValues({ ...currentUserData });\n        toggleModal(false);\n      });\n    },\n    nextError: (error) => {\n      NotificationManager.error(\n        error,\n        'Client Operation Error',\n        3000,\n        null,\n        null,\n        ''\n      );\n    },\n  });\n\n  const handleChange = (event) => {\n    setValues({ ...values, [event.target.id]: event.target.value });\n  };\n\n  const handleSelectChange = (newData) => {\n    setValues({\n      ...values,\n      gender: newData.value,\n      _gender: newData,\n    });\n  };\n\n  const handleSubmit = () => {\n    doRequest();\n  };\n\n  return (\n    <Modal\n      isOpen={modalOpen}\n      toggle={() => {\n        toggleModal();\n        setValues({\n          ...currentUserData,\n          gender: genderOptions.find(\n            ({ value }) => value === currentUserData.gender\n          ),\n        });\n      }}\n      size=\"lg\"\n      backdrop=\"static\"\n    >\n      <ModalHeader\n        toggle={() => {\n          toggleModal();\n          setValues({\n            ...currentUserData,\n            gender: genderOptions.find(\n              ({ value }) => value === currentUserData.gender\n            ),\n          });\n        }}\n      >\n        <IntlMessages id=\"pages.edit-modal-title\" />\n      </ModalHeader>\n      <ModalBody>\n        <Row>\n          <Colxx>\n            <Label className=\"mt-4\">\n              <IntlMessages id=\"pages.client-first-name\" />\n            </Label>\n            <Input\n              id=\"first_name\"\n              value={values.first_name}\n              required\n              onChange={handleChange}\n            />\n          </Colxx>\n          <Colxx>\n            <Label className=\"mt-4\">\n              <IntlMessages id=\"pages.client-last-name\" />\n            </Label>\n            <Input\n              id=\"last_name\"\n              value={values.last_name}\n              required\n              onChange={handleChange}\n            />\n          </Colxx>\n        </Row>\n\n        <Row>\n          <Colxx>\n            <Label className=\"mt-4\">\n              <IntlMessages id=\"pages.client-date-of-birth\" />\n            </Label>\n            <DatePicker\n              id=\"date_of_birth\"\n              dateFormat=\"dd/MM/yyyy\"\n              showYearDropdown\n              showMonthDropdown\n              selected={new Date(values.date_of_birth)}\n              maxDate={new Date()}\n              onChange={(date) => handleDateChange(date, 'date_of_birth')}\n              placeholderText=\"Date of birth\"\n            />\n          </Colxx>\n          <Colxx>\n            <Label className=\"mt-4\">\n              <IntlMessages id=\"pages.client-gender\" />\n            </Label>\n            <Select\n              id=\"gender\"\n              value={values._gender}\n              required\n              className=\"react-select\"\n              classNamePrefix=\"react-select\"\n              options={genderOptions}\n              onChange={handleSelectChange}\n            />\n          </Colxx>\n        </Row>\n\n        <Row>\n          <Colxx>\n            <Label className=\"mt-4\">\n              <IntlMessages id=\"pages.client-ethinicity\" />\n            </Label>\n            <Input\n              id=\"ethinicity\"\n              value={values.ethinicity}\n              onChange={handleChange}\n            />\n          </Colxx>\n          <Colxx>\n            <Label className=\"mt-4\">\n              <IntlMessages id=\"pages.user-phone-required\" />\n            </Label>\n            <Input\n              id=\"phone_number\"\n              value={values.phone_number}\n              placeholder=\"987XX XX789\"\n              onChange={handleChange}\n            />\n          </Colxx>\n        </Row>\n\n        <Row>\n          <Colxx>\n            <Label className=\"mt-4\">\n              <IntlMessages id=\"pages.user-email\" />\n            </Label>\n            <Input\n              id=\"email\"\n              required\n              pattern=\"/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i\"\n              placeholder=\"example@email.com\"\n              value={values.email}\n              onChange={handleChange}\n            />\n          </Colxx>\n          <Colxx>\n            <Label className=\"mt-4\">\n              <IntlMessages id=\"pages.client-emergency-phone\" />\n            </Label>\n            <Input\n              id=\"emergency_phone_number\"\n              value={values.emergency_phone_number}\n              placeholder=\"987XX XX789\"\n              onChange={handleChange}\n            />\n          </Colxx>\n        </Row>\n\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"pages.client-address\" />\n        </Label>\n        <Input\n          id=\"address\"\n          type=\"textarea\"\n          rows=\"6\"\n          value={values.address}\n          onChange={handleChange}\n        />\n\n        <Row>\n          <Colxx>\n            <Label className=\"mt-4\">\n              <IntlMessages id=\"pages.client-city\" />\n            </Label>\n            <Input id=\"city\" value={values.city} onChange={handleChange} />\n          </Colxx>\n        </Row>\n      </ModalBody>\n      <ModalFooter>\n        <Button\n          color=\"danger\"\n          outline\n          onClick={() => {\n            toggleModal();\n            setValues({\n              ...currentUserData,\n              gender: genderOptions.find(\n                ({ value }) => value === currentUserData.gender\n              ),\n            });\n          }}\n        >\n          <IntlMessages id=\"pages.cancel\" />\n        </Button>\n        <Button\n          id=\"edit-user\"\n          color=\"primary\"\n          className={`btn-shadow btn-multiple-state ${\n            loading ? 'show-spinner' : ''\n          }`}\n          onClick={handleSubmit}\n        >\n          <span className=\"spinner d-inline-block\">\n            <span className=\"bounce1\" />\n            <span className=\"bounce2\" />\n            <span className=\"bounce3\" />\n          </span>\n          <span className=\"label\">\n            <IntlMessages id=\"pages.submit\" />\n          </span>\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = ({ authUser, clientsApp }) => {\n  const { accessToken } = authUser;\n  const { filters } = clientsApp;\n  return { accessToken, filters };\n};\n\nexport default connect(mapStateToProps, {\n  getClientsAction: getClients,\n})(EditModal);\n","/* eslint-disable camelcase */\nimport React, { useEffect, useState } from 'react';\nimport { Row } from 'reactstrap';\nimport { connect } from 'react-redux';\n\nimport { Colxx } from '../../../../components/common/CustomBootstrap';\n\nimport DataTable from './components/data-table';\nimport AddNewModal from './components/add-new-modal';\nimport DataPageHeading from './components/data-page-heading';\nimport { log } from '../../../../helpers/Utils';\nimport EditModal from './components/edit-modal';\nimport { getClients, updateClientFilters } from '../../../../redux/actions';\n\nimport 'react-datepicker/dist/react-datepicker.css';\n\nconst orderOptions = [\n  { column: 'email', label: 'Email' },\n  { column: 'first_name', label: 'First Name' },\n  { column: 'last_name', label: 'Last Name' },\n  { column: 'gender', label: 'Gender' },\n];\n\nconst pageSizes = [4, 8, 12, 20];\n\nconst getIndex = (value, arr, prop) => {\n  for (let i = 0; i < arr.length; i += 1) {\n    if (arr[i][prop] === value) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nconst Clients = ({\n  match,\n  loading,\n  filters,\n  clients,\n  accessToken,\n  currentUser,\n  getClientsAction,\n  updateFiltersAction,\n}) => {\n  const {\n    currentPage,\n    selectedOrderOption,\n    selectedPageSize,\n    search,\n  } = filters;\n\n  const { data, totalPage, totalItems } = clients;\n\n  const { client_add, client_edit, is_superadmin } = currentUser;\n\n  const [addModalOpen, setAddModalOpen] = useState(false);\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [lastChecked, setLastChecked] = useState(null);\n\n  const [selectedItem, setSelectedItem] = useState(() => {\n    if (data[0] === undefined)\n      return {\n        address: '',\n        city: '',\n        date_of_birth: new Date(),\n        email: '',\n        first_name: '',\n        gender: '',\n        last_name: '',\n        phone_number: '',\n        state: '',\n      };\n\n    return data[0];\n  });\n\n  const setSearch = (query) => {\n    updateFiltersAction({ ...filters, search: query });\n  };\n\n  const setCurrentPage = (newCurrentPage) => {\n    updateFiltersAction({ ...filters, currentPage: newCurrentPage });\n  };\n\n  const setSelectedPageSize = (newSelectedPageSize) => {\n    updateFiltersAction({ ...filters, selectedPageSize: newSelectedPageSize });\n  };\n\n  const setSelectedOrderOption = (newSelectedOrderOption) => {\n    updateFiltersAction({\n      ...filters,\n      selectedOrderOption: newSelectedOrderOption,\n    });\n  };\n\n  useEffect(() => {\n    getClientsAction(accessToken, filters);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedPageSize, currentPage, selectedOrderOption, search]);\n\n  const onCheckItem = (event, id) => {\n    if (\n      event.target.tagName === 'A' ||\n      (event.target.parentElement && event.target.parentElement.tagName === 'A')\n    ) {\n      return true;\n    }\n\n    if (lastChecked === null) {\n      setLastChecked(id);\n    }\n\n    let selectedList = [...selectedItems];\n    if (selectedList.includes(id)) {\n      selectedList = selectedList.filter((x) => x !== id);\n    } else {\n      selectedList.push(id);\n    }\n    setSelectedItems(selectedList);\n\n    if (event.shiftKey) {\n      let newItems = [...data];\n      const start = getIndex(id, newItems, 'id');\n      const end = getIndex(lastChecked, newItems, 'id');\n      newItems = newItems.slice(Math.min(start, end), Math.max(start, end) + 1);\n      selectedItems.push(\n        ...newItems.map((item) => {\n          return item.id;\n        })\n      );\n      selectedList = Array.from(new Set(selectedItems));\n      setSelectedItems(selectedList);\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const onContextMenuClick = (e, item) => {\n    log('onContextMenuClick - selected items', selectedItems);\n    log('onContextMenuClick - action : ', item.action);\n\n    switch (item.action) {\n      case 'edit':\n        setSelectedItem(item.data);\n        setEditModalOpen(true);\n        break;\n      case 'create-new':\n        setAddModalOpen(true);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const onContextMenu = (e, item) => {\n    const clickedProductId = item.data.email;\n    if (!selectedItems.includes(clickedProductId)) {\n      setSelectedItems([clickedProductId]);\n    }\n\n    return true;\n  };\n\n  const startIndex = (currentPage - 1) * selectedPageSize;\n  const endIndex = currentPage * selectedPageSize;\n\n  return (\n    <>\n      <Row>\n        {loading && (\n          <div\n            className=\"loading\"\n            data-keyboard=\"false\"\n            data-backdrop=\"static\"\n          />\n        )}\n        <Colxx xxs=\"12\" className=\"mb-4\">\n          <div className=\"disable-text-selection\">\n            <DataPageHeading\n              heading=\"menu.client\"\n              changeOrderBy={(column) => {\n                setSelectedOrderOption(\n                  orderOptions.find((x) => x.column === column)\n                );\n              }}\n              changePageSize={setSelectedPageSize}\n              selectedPageSize={selectedPageSize}\n              totalItemCount={totalItems}\n              selectedOrderOption={selectedOrderOption}\n              match={match}\n              startIndex={startIndex}\n              endIndex={endIndex}\n              selectedItemsLength={selectedItems ? selectedItems.length : 0}\n              itemsLength={data ? data.length : 0}\n              onSearchKey={(e) => {\n                if (e.key === 'Enter') {\n                  setSearch(e.target.value.toLowerCase());\n                }\n              }}\n              orderOptions={orderOptions}\n              pageSizes={pageSizes}\n              toggleModal={() => setAddModalOpen(!addModalOpen)}\n              showAdd={client_add}\n              isSuperAdmin={is_superadmin}\n            />\n            {client_add && (\n              <AddNewModal\n                modalOpen={addModalOpen}\n                toggleModal={() => setAddModalOpen(!addModalOpen)}\n              />\n            )}\n\n            {client_edit && (\n              <EditModal\n                modalOpen={editModalOpen}\n                toggleModal={() => setEditModalOpen(!editModalOpen)}\n                currentUserData={selectedItem}\n              />\n            )}\n\n            <DataTable\n              items={data || []}\n              selectedItems={selectedItems}\n              onCheckItem={onCheckItem}\n              currentPage={currentPage}\n              totalPage={totalPage}\n              onContextMenuClick={onContextMenuClick}\n              onContextMenu={onContextMenu}\n              onChangePage={setCurrentPage}\n              showAdd={client_add}\n              showEdit={client_edit}\n            />\n          </div>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nconst mapStateToProps = ({ authUser, clientsApp }) => {\n  const { accessToken, currentUser } = authUser;\n  const { clients, filters, loading, message, error } = clientsApp;\n  return {\n    accessToken,\n    currentUser,\n    clients,\n    filters,\n    loading,\n    message,\n    error,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getClientsAction: getClients,\n  updateFiltersAction: updateClientFilters,\n})(Clients);\n"],"sourceRoot":""}