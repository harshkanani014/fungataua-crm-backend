{"version":3,"sources":["components/common/CustomBootstrap.js","helpers/IntlMessages.js","components/svg/MenuIcon.js","components/svg/MobileMenuIcon.js","containers/navs/Topnav.DarkSwitch.js","containers/navs/Topnav.js","constants/menu.js","containers/navs/Sidebar.js","containers/navs/Footer.js","layout/AppLayout.js","views/app/index.js"],"names":["Colxx","props","widths","Separator","className","injectIntl","withRef","MenuIcon","xmlns","viewBox","x","y","width","height","MobileMenuIcon","TopnavDarkSwitch","useState","switchChecked","setSwitchChecked","tooltipOpen","setTooltipOpen","useEffect","color","getCurrentColor","indexOf","id","checked","onChange","replace","setCurrentColor","setTimeout","window","location","reload","Tooltip","placement","isOpen","target","toggle","connect","menu","settings","authUser","containerClassnames","menuClickCount","selectedMenuHasSubItems","locale","currentUser","setContainerClassnamesAction","setContainerClassnames","clickOnMobileMenuAction","clickOnMobileMenu","logoutUserAction","logoutUser","history","isInFullScreen","setIsInFullScreen","email","img","to","onClick","e","_clickCount","_conClassnames","preventDefault","event","document","createEvent","initEvent","dispatchEvent","menuButtonClick","_containerClassnames","mobileMenuButtonClick","isDarkSwitchActive","type","isFS","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","docElm","documentElement","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullScreen","msRequestFullscreen","UncontrolledDropdown","DropdownToggle","alt","src","DropdownMenu","right","DropdownItem","push","divider","data","icon","label","adminRoot","roles","UserRole","Admin","Sidebar","handleWindowResize","isTrusted","nextClasses","getMenuClassesForResize","join","handleDocumentClick","container","getContainer","isMenuClick","classList","contains","parentElement","setState","viewingParentMenu","classes","menuHiddenBreakpoint","subHiddenBreakpoint","split","filter","windowWidth","innerWidth","includes","ReactDOM","findDOMNode","hasSubItems","getIsHasSubItem","changeSelectedMenuHasSubItems","currentClasses","clickIndex","handleProps","addEvents","forEach","addEventListener","removeEvents","removeEventListener","setSelectedLiActive","callback","oldli","querySelector","remove","oldliSub","selectedSublink","add","selectedlink","selectedParentMenu","getAttribute","selectedParentNoSubItem","state","menuItems","setHasSubItemStatus","hasSubmenu","menuItem","find","subs","length","openSubMenu","selectedParent","hasSubMenu","addContainerClassname","toggleMenuCollapse","menuKey","collapsedMenus","filteredList","role","prevProps","this","pathname","scrollTo","options","suppressScrollX","wheelPropagation","Nav","vertical","map","item","NavItem","classnames","active","newWindow","href","rel","IntlMessages","sub","index","Collapse","thirdSub","thirdIndex","Component","withRouter","changeDefaultClassnames","Footer","Row","xxs","sm","children","Dashboard","lazy","Account","Status","Service","Category","SubCategory","Client","match","fallback","exact","from","url","path","render","component"],"mappings":"+OAGMA,EAAQ,SAACC,GAAD,OACZ,cAAC,IAAD,2BAASA,GAAT,IAAgBC,OAAQ,CAAC,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,WAE1DC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OAChB,qBAAKA,UAAS,oBAAeA,O,6ECFhBC,iBAFO,SAACJ,GAAD,OAAW,cAAC,IAAD,eAAsBA,MAEd,CACvCK,SAAS,K,8JCqBIC,EAzBE,WACf,OACE,qCACE,sBACEH,UAAU,OACVI,MAAM,6BACNC,QAAQ,WAHV,UAKE,sBAAMC,EAAE,OAAOC,EAAE,MAAMC,MAAM,IAAIC,OAAO,MACxC,sBAAMH,EAAE,OAAOC,EAAE,MAAMC,MAAM,IAAIC,OAAO,MACxC,sBAAMH,EAAE,OAAOC,EAAE,OAAOC,MAAM,IAAIC,OAAO,SAE3C,sBACET,UAAU,MACVI,MAAM,6BACNC,QAAQ,YAHV,UAKE,sBAAMC,EAAE,OAAOC,EAAE,MAAMC,MAAM,KAAKC,OAAO,MACzC,sBAAMH,EAAE,OAAOC,EAAE,MAAMC,MAAM,KAAKC,OAAO,MACzC,sBAAMH,EAAE,OAAOC,EAAE,OAAOC,MAAM,KAAKC,OAAO,aCTnCC,EAVQ,WACrB,OACE,sBAAKN,MAAM,6BAA6BC,QAAQ,YAAhD,UACE,sBAAMC,EAAE,MAAMC,EAAE,MAAMC,MAAM,KAAKC,OAAO,MACxC,sBAAMH,EAAE,MAAMC,EAAE,MAAMC,MAAM,KAAKC,OAAO,MACxC,sBAAMH,EAAE,MAAMC,EAAE,OAAOC,MAAM,KAAKC,OAAO,U,mCC0ChCE,EA3CU,WACvB,MAA0CC,oBAAS,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAEAC,qBAAU,WACR,IAAMC,EAAQC,cACdL,EAAiBI,EAAME,QAAQ,SAAW,KACzC,IAiBH,OACE,sBAAKpB,UAAU,6CAAf,UACE,cAAC,IAAD,CACEqB,GAAG,iBACHrB,UAAU,0DACVsB,QAAST,EACTU,SArBa,WACjB,IAAIL,EAAQC,cAERD,EAAME,QAAQ,SAAW,EAC3BF,EAAQA,EAAMM,QAAQ,OAAQ,SACrBN,EAAME,QAAQ,UAAY,IACnCF,EAAQA,EAAMM,QAAQ,QAAS,SAEjCC,YAAgBP,GAChBJ,EAAiBI,EAAME,QAAQ,SAAW,GAC1CM,YAAW,WACTC,OAAOC,SAASC,WACf,QAWD,cAACC,EAAA,EAAD,CACEC,UAAU,OACVC,OAAQjB,EACRkB,OAAO,iBACPC,OAAQ,kBAAMlB,GAAgBD,IAJhC,2BCuLSd,cACbkC,aAdsB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAIzC,MAAO,CACLC,oBAJuEH,EAAjEG,oBAKNC,eALuEJ,EAA5CI,eAM3BC,wBANuEL,EAA5BK,wBAO3CC,OANiBL,EAAXK,OAONC,YANsBL,EAAhBK,eAWiB,CACvBC,6BAA8BC,KAC9BC,wBAAyBC,KACzBC,iBAAkBC,MAHpBd,EAlMa,SAAC,GAST,IARLe,EAQI,EARJA,QACAX,EAOI,EAPJA,oBACAC,EAMI,EANJA,eACAG,EAKI,EALJA,YACAF,EAII,EAJJA,wBACAG,EAGI,EAHJA,6BACAE,EAEI,EAFJA,wBACAE,EACI,EADJA,iBAEA,EAA4CpC,oBAAS,GAArD,mBAAOuC,EAAP,KAAuBC,EAAvB,KACA,EAA0CxC,mBAAS,IAAnD,mBAEQyC,GAFR,UAEuBV,EAAfU,OAAOC,EAAQX,EAARW,IAwGf,OACE,sBAAKtD,UAAU,mBAAf,UACE,sBAAKA,UAAU,wCAAf,UACE,cAAC,IAAD,CACEuD,GAAG,IACH3B,SAAU,GACV5B,UAAU,gCACVwD,QAAS,SAACC,GAAD,OA/BO,SAACA,EAAGC,EAAaC,GACvCF,EAAEG,iBAEFlC,YAAW,WACT,IAAMmC,EAAQC,SAASC,YAAY,cACnCF,EAAMG,UAAU,UAAU,GAAO,GACjCrC,OAAOsC,cAAcJ,KACpB,KACHjB,EACEc,EAAc,EACdC,EACAlB,GAqBMyB,CAAgBT,EAAGjB,EAAgBD,IALvC,SAQE,cAAC,EAAD,MAEF,cAAC,IAAD,CACEgB,GAAG,IACH3B,SAAU,GACV5B,UAAU,qDACVwD,QAAS,SAACC,GAAD,OA1Ba,SAACA,EAAGU,GAChCV,EAAEG,iBACFd,EAAwBqB,GAwBFC,CAAsBX,EAAGlB,IAJ3C,SAME,cAAC,EAAD,SAIJ,sBAAKvC,UAAU,eAAf,UACGqE,KAAsB,cAAC,EAAD,IACvB,qBAAKrE,UAAU,2CAAf,SACE,wBACEA,UAAU,qDACVsE,KAAK,SACLjD,GAAG,mBACHmC,QApFe,WACvB,IAAMe,EA1CHT,SAASU,mBAAoD,OAA/BV,SAASU,mBACvCV,SAASW,yBAC6B,OAArCX,SAASW,yBACVX,SAASY,sBAC0B,OAAlCZ,SAASY,sBACVZ,SAASa,qBAAwD,OAAjCb,SAASa,oBAuCtCC,EAASd,SAASe,gBACnBN,EAUMT,SAASgB,eAClBhB,SAASgB,iBACAhB,SAASiB,qBAClBjB,SAASiB,uBACAjB,SAASkB,oBAClBlB,SAASkB,sBACAlB,SAASmB,kBAClBnB,SAASmB,mBAhBLL,EAAOM,kBACTN,EAAOM,oBACEN,EAAOO,qBAChBP,EAAOO,uBACEP,EAAOQ,wBAChBR,EAAOQ,0BACER,EAAOS,qBAChBT,EAAOS,sBAWXjC,GAAmBmB,IAyDb,SAMGpB,EACC,mBAAGnD,UAAU,oCAEb,mBAAGA,UAAU,4CAInB,qBAAKA,UAAU,sBAAf,SACE,eAACsF,EAAA,EAAD,CAAsBtF,UAAU,sBAAhC,UACE,eAACuF,EAAA,EAAD,CAAgBvF,UAAU,MAAMkB,MAAM,QAAtC,UACE,sBAAMlB,UAAU,YAAhB,SAA6BqD,IAC7B,+BACE,qBAAKmC,IAAI,UAAUC,IAAKnC,SAG5B,eAACoC,EAAA,EAAD,CAAc1F,UAAU,OAAO2F,OAAK,EAApC,UACE,cAACC,EAAA,EAAD,CAAcpC,QApDE,WAC1BN,EAAQ2C,KAAR,yBAmDU,4BAGA,cAACD,EAAA,EAAD,CAAcE,SAAO,IACrB,cAACF,EAAA,EAAD,CAAcpC,QAAS,WA/EjCR,EAAiBE,IA+EP,wC,sICtJC6C,EA7CF,CACX,CACE1E,GAAI,YACJ2E,KAAM,+BACNC,MAAO,iBACP1C,GAAG,GAAD,OAAK2C,IAAL,eAEJ,CACE7E,GAAI,OACJ2E,KAAM,qBACNC,MAAO,YACP1C,GAAG,GAAD,OAAK2C,IAAL,SACFC,MAAO,CAACC,IAASC,QAEnB,CACEhF,GAAI,SACJ2E,KAAM,uBACNC,MAAO,cACP1C,GAAG,GAAD,OAAK2C,IAAL,YAEJ,CACE7E,GAAI,SACJ2E,KAAM,mBACNC,MAAO,cACP1C,GAAG,GAAD,OAAK2C,IAAL,YAEJ,CACE7E,GAAI,WACJ2E,KAAM,2BACNC,MAAO,gBACP1C,GAAG,GAAD,OAAK2C,IAAL,cAEJ,CACE7E,GAAI,WACJ2E,KAAM,mBACNC,MAAO,gBACP1C,GAAG,GAAD,OAAK2C,IAAL,cAEJ,CACE7E,GAAI,eACJ2E,KAAM,mBACNC,MAAO,oBACP1C,GAAG,GAAD,OAAK2C,IAAL,mBCxBAI,E,kDACJ,WAAYzG,GAAQ,IAAD,8BACjB,cAAMA,IASR0G,mBAAqB,SAAC1C,GACpB,IAAIA,GAAUA,EAAM2C,UAApB,CAGA,IAAQjE,EAAwB,EAAK1C,MAA7B0C,oBACFkE,EAAc,EAAKC,wBAAwBnE,GAEjD,EAAK1C,MAAMgD,uBACT,EACA4D,EAAYE,KAAK,KAEjB,EAAK9G,MAAM4C,2BArBI,EAyBnBmE,oBAAsB,SAACnD,GACrB,IAAMoD,EAAY,EAAKC,eACnBC,GAAc,GAEhBtD,EAAExB,QACFwB,EAAExB,OAAO+E,YACRvD,EAAExB,OAAO+E,UAAUC,SAAS,gBAC3BxD,EAAExB,OAAO+E,UAAUC,SAAS,wBAI9BxD,EAAExB,OAAOiF,eACTzD,EAAExB,OAAOiF,cAAcF,YACtBvD,EAAExB,OAAOiF,cAAcF,UAAUC,SAAS,gBACzCxD,EAAExB,OAAOiF,cAAcF,UAAUC,SAAS,wBAI5CxD,EAAExB,OAAOiF,eACTzD,EAAExB,OAAOiF,cAAcA,eACvBzD,EAAExB,OAAOiF,cAAcA,cAAcF,YACpCvD,EAAExB,OAAOiF,cAAcA,cAAcF,UAAUC,SAAS,gBACvDxD,EAAExB,OAAOiF,cAAcA,cAAcF,UAAUC,SAC7C,0BAdJF,GAAc,GAmBZF,EAAUI,SAASxD,EAAExB,SAAW4E,IAAcpD,EAAExB,QAAU8E,IAG9D,EAAKI,SAAS,CACZC,kBAAmB,KAErB,EAAKlF,WA3DY,EA8DnBwE,wBAA0B,SAACW,GACzB,MAAsD,EAAKxH,MAAnDyH,EAAR,EAAQA,qBAAsBC,EAA9B,EAA8BA,oBAC1Bd,EAAcY,EAAQG,MAAM,KAAKC,QAAO,SAACnH,GAAD,MAAa,KAANA,KAC7CoH,EAAc/F,OAAOgG,WAoB3B,OAnBID,EAAcJ,EAChBb,EAAYZ,KAAK,eACR6B,EAAcH,GACvBd,EAAcA,EAAYgB,QAAO,SAACnH,GAAD,MAAa,gBAANA,MAE1BsH,SAAS,kBACpBnB,EAAYmB,SAAS,oBAEtBnB,EAAYZ,KAAK,oBAGnBY,EAAcA,EAAYgB,QAAO,SAACnH,GAAD,MAAa,gBAANA,MAE1BsH,SAAS,iBACrBnB,EAAYmB,SAAS,qBAErBnB,EAAcA,EAAYgB,QAAO,SAACnH,GAAD,MAAa,oBAANA,MAGrCmG,GArFU,EAwFnBK,aAAe,WAEb,OAAOe,IAASC,YAAT,iBA1FU,EA6FnB5F,OAAS,WACP,IAAM6F,EAAc,EAAKC,kBAEzB,EAAKnI,MAAMoI,8BAA8BF,GACzC,MAAgD,EAAKlI,MAA7C0C,EAAR,EAAQA,oBAAqBC,EAA7B,EAA6BA,eACvB0F,EAAiB3F,EACnBA,EAAoBiF,MAAM,KAAKC,QAAO,SAACnH,GAAD,MAAa,KAANA,KAC7C,GACA6H,GAAc,EAEbJ,EAkBHG,EAAeN,SAAS,oBACL,IAAnBpF,EAEA2F,EAAa,GAEbD,EAAeN,SAAS,gBACxBM,EAAeN,SAAS,kBAExBO,EAAa,IAxBXD,EAAeN,SAAS,iBACvBpF,EAAiB,IAAM,GAAKA,EAAiB,IAAM,GAIpD0F,EAAeN,SAAS,oBACJ,IAAnBpF,GAA2C,IAAnBA,GAIzB0F,EAAeN,SAAS,gBACxBM,EAAeN,SAAS,kBAExBO,EAAa,GALbA,EAAa,EALbA,EAAa,EAuBbA,GAAc,GAEhB,EAAKtI,MAAMgD,uBACTsF,EACA5F,EACAwF,IAxIa,EA6InBK,YAAc,WACZ,EAAKC,aA9IY,EAiJnBA,UAAY,WACV,CAAC,QAAS,aAAc,YAAYC,SAAQ,SAACzE,GAAD,OAC1CC,SAASyE,iBAAiB1E,EAAO,EAAK+C,qBAAqB,OAnJ5C,EAuJnB4B,aAAe,WACb,CAAC,QAAS,aAAc,YAAYF,SAAQ,SAACzE,GAAD,OAC1CC,SAAS2E,oBAAoB5E,EAAO,EAAK+C,qBAAqB,OAzJ/C,EA6JnB8B,oBAAsB,SAACC,GACrB,IAAMC,EAAQ9E,SAAS+E,cAAc,wBACxB,MAATD,GACFA,EAAM5B,UAAU8B,OAAO,UAGzB,IAAMC,EAAWjF,SAAS+E,cAAc,gCACxB,MAAZE,GACFA,EAAS/B,UAAU8B,OAAO,UAI5B,IAAME,EAAkBlF,SAAS+E,cAC/B,+BAEqB,MAAnBG,GACFA,EAAgB9B,cAAcF,UAAUiC,IAAI,UAG9C,IAAMC,EAAepF,SAAS+E,cAAc,uBAC5C,GAAoB,MAAhBK,EACFA,EAAahC,cAAcF,UAAUiC,IAAI,UACzC,EAAK9B,SACH,CACEgC,mBAAoBD,EAAahC,cAAcA,cAAckC,aAC3D,gBAGJT,OAEG,CACL,IAAMU,EAA0BvF,SAAS+E,cACvC,2BAE6B,MAA3BQ,EACF,EAAKlC,SACH,CACEgC,mBAAoBE,EAAwBD,aAC1C,cAGJT,GAGyC,KAAlC,EAAKW,MAAMH,oBACpB,EAAKhC,SACH,CACEgC,mBAAoBI,EAAU,GAAGlI,IAEnCsH,KA9MW,EAoNnBa,oBAAsB,WACpB,IAAMC,EAAa,EAAKzB,kBAExB,EAAKnI,MAAMoI,8BAA8BwB,GACzC,EAAKvH,UAxNY,EA2NnB8F,gBAAkB,WAChB,IAAQmB,EAAuB,EAAKG,MAA5BH,mBACFO,EAAWH,EAAUI,MAAK,SAACrJ,GAAD,OAAOA,EAAEe,KAAO8H,KAChD,QAAIO,MACQA,GAAYA,EAASE,MAAQF,EAASE,KAAKC,OAAS,IA/N/C,EA0PnBC,YAAc,SAACrG,EAAGiG,GAChB,IAAMK,EAAiBL,EAASrI,GAC1B2I,EAAaN,EAASE,MAAQF,EAASE,KAAKC,OAAS,EAG3D,GADA,EAAKhK,MAAMoI,8BAA8B+B,GACpCA,EAME,CACLvG,EAAEG,iBAEF,MAAgD,EAAK/D,MAA7C0C,EAAR,EAAQA,oBAAqBC,EAA7B,EAA6BA,eACvB0F,EAAiB3F,EACnBA,EAAoBiF,MAAM,KAAKC,QAAO,SAACnH,GAAD,MAAa,KAANA,KAC7C,GAEC4H,EAAeN,SAAS,eAuB3B,EAAK/H,MAAMoK,sBACT,qBACA1H,IAvBA2F,EAAeN,SAAS,oBACJ,IAAnBpF,GAA2C,IAAnBA,GAKzB0F,EAAeN,SAAS,gBACJ,IAAnBpF,GAA2C,IAAnBA,GAKzB0F,EAAeN,SAAS,iBACvBM,EAAeN,SAAS,oBACL,IAAnBpF,GAA2C,IAAnBA,GAGzB,EAAK3C,MAAMgD,uBAAuB,EAAGN,EAAqByH,GAP1D,EAAKnK,MAAMgD,uBAAuB,EAAGN,EAAqByH,GAN1D,EAAKnK,MAAMgD,uBAAuB,EAAGN,EAAqByH,GAsB9D,EAAK7C,SAAS,CACZC,kBAAmB2C,SA1CrB,EAAK5C,SAAS,CACZC,kBAAmB2C,EACnBZ,mBAAoBY,IAEtB,EAAK7H,UApQU,EA+SnBgI,mBAAqB,SAACzG,EAAG0G,GACvB1G,EAAEG,iBAEF,IAAQwG,EAAmB,EAAKd,MAAxBc,eAWR,OAVIA,EAAehJ,QAAQ+I,IAAY,EACrC,EAAKhD,SAAS,CACZiD,eAAgBA,EAAe3C,QAAO,SAACnH,GAAD,OAAOA,IAAM6J,QAGrDC,EAAevE,KAAKsE,GACpB,EAAKhD,SAAS,CACZiD,qBAGG,GA7TU,EAiUnBC,aAAe,SAACd,GACd,IAAQ5G,EAAgB,EAAK9C,MAArB8C,YACR,OAAIA,EACK4G,EAAU9B,QACf,SAACnH,GAAD,OAAQA,EAAE6F,OAAS7F,EAAE6F,MAAMyB,SAASjF,EAAY2H,QAAWhK,EAAE6F,SAG1DoD,GAtUP,EAAKD,MAAQ,CACXH,mBAAoB,GACpB/B,kBAAmB,GACnBgD,eAAgB,IALD,E,sDAoOnB,SAAmBG,GAEbC,KAAK3K,MAAM+B,SAAS6I,WAAaF,EAAU3I,SAAS6I,WACtDD,KAAK9B,oBAAoB8B,KAAKhB,qBAE9B7H,OAAO+I,SAAS,EAAG,IAErBF,KAAKpC,gB,+BAGP,WACEzG,OAAO4G,iBAAiB,SAAUiC,KAAKjE,oBACvCiE,KAAKjE,qBACLiE,KAAKpC,cACLoC,KAAK9B,oBAAoB8B,KAAKhB,uB,kCAGhC,WACEgB,KAAKhC,eACL7G,OAAO8G,oBAAoB,SAAU+B,KAAKjE,sB,oBAoF5C,WAAU,IAAD,OACP,EAIIiE,KAAKlB,MAHPH,EADF,EACEA,mBACA/B,EAFF,EAEEA,kBACAgD,EAHF,EAGEA,eAEF,OACE,sBAAKpK,UAAU,UAAf,UACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,SAAf,SACE,cAAC,IAAD,CACE2K,QAAS,CAAEC,iBAAiB,EAAMC,kBAAkB,GADtD,SAGE,cAACC,EAAA,EAAD,CAAKC,UAAQ,EAAC/K,UAAU,gBAAxB,SACGuJ,GACCiB,KAAKH,aAAad,GAAWyB,KAAI,SAACC,GAChC,OACE,cAACC,EAAA,EAAD,CAEElL,UAAWmL,IAAW,CACpBC,OACGjC,IAAuB8B,EAAK5J,IACL,KAAtB+F,GACFA,IAAsB6D,EAAK5J,KANjC,SASG4J,EAAKI,UACJ,oBACEC,KAAML,EAAK1H,GACXgI,IAAI,sBACJtJ,OAAO,SAHT,UAKE,mBAAGjC,UAAWiL,EAAKjF,OAAS,IAC5B,cAACwF,EAAA,EAAD,CAAcnK,GAAI4J,EAAKhF,WAGzB,eAAC,IAAD,CACE1C,GAAI0H,EAAK1H,GACTC,QAAS,SAACC,GAAD,OAAO,EAAKqG,YAAYrG,EAAGwH,IACpC,YAAWA,EAAK5J,GAHlB,UAKE,mBAAGrB,UAAWiL,EAAKjF,OAAS,IAC5B,cAACwF,EAAA,EAAD,CAAcnK,GAAI4J,EAAKhF,YAxBtBgF,EAAK5J,eAmC1B,qBAAKrB,UAAU,WAAf,SACE,qBAAKA,UAAU,SAAf,SACE,cAAC,IAAD,CACE2K,QAAS,CAAEC,iBAAiB,EAAMC,kBAAkB,GADtD,SAGGtB,GACCiB,KAAKH,aAAad,GAAWyB,KAAI,SAACC,GAChC,OACE,cAACH,EAAA,EAAD,CAEE9K,UAAWmL,IAAW,CACpB,UAEG,EAAK7B,MAAMH,qBAAuB8B,EAAK5J,IAEL,KAAjC,EAAKiI,MAAMlC,mBAEb,EAAKkC,MAAMlC,oBAAsB6D,EAAK5J,KAE1C,cAAa4J,EAAK5J,GAXpB,SAaG4J,EAAKrB,MACJ,EAAKS,aAAaY,EAAKrB,MAAMoB,KAAI,SAACS,EAAKC,GACrC,OACE,cAACR,EAAA,EAAD,CAEElL,UAAS,UACPyL,EAAI7B,MAAQ6B,EAAI7B,KAAKC,OAAS,EAC1B,eACA,IALR,SASG4B,EAAIJ,UACH,oBACEC,KAAMG,EAAIlI,GACVgI,IAAI,sBACJtJ,OAAO,SAHT,UAKE,mBAAGjC,UAAWyL,EAAIzF,OAAS,IAC3B,cAACwF,EAAA,EAAD,CAAcnK,GAAIoK,EAAIxF,WAEtBwF,EAAI7B,MAAQ6B,EAAI7B,KAAKC,OAAS,EAChC,qCACE,eAAC,IAAD,CACE7J,UAAS,wCAGA,IAFPoK,EAAehJ,QAAf,UACK6J,EAAK5J,GADV,YACgBqK,IAEZ,GACA,aAENnI,GAAIkI,EAAIlI,GACRlC,GAAE,UAAK4J,EAAK5J,GAAV,YAAgBqK,GAClBlI,QAAS,SAACC,GAAD,OACP,EAAKyG,mBACHzG,EADF,UAEKwH,EAAK5J,GAFV,YAEgBqK,KAbpB,UAiBE,mBAAG1L,UAAU,2BAA4B,IACzC,cAACwL,EAAA,EAAD,CAAcnK,GAAIoK,EAAIxF,WAGxB,cAAC0F,EAAA,EAAD,CACE3J,QAGS,IAFPoI,EAAehJ,QAAf,UACK6J,EAAK5J,GADV,YACgBqK,IAHpB,SAOE,cAACZ,EAAA,EAAD,CAAK9K,UAAU,mBAAf,SACG,EAAKqK,aAAaoB,EAAI7B,MAAMoB,KAC3B,SAACY,EAAUC,GACT,OACE,cAACX,EAAA,EAAD,UAGGU,EAASP,UACR,oBACEC,KAAMM,EAASrI,GACfgI,IAAI,sBACJtJ,OAAO,SAHT,UAKE,mBACEjC,UAAW4L,EAAS5F,OACnB,IACH,cAACwF,EAAA,EAAD,CACEnK,GAAIuK,EAAS3F,WAIjB,eAAC,IAAD,CAAS1C,GAAIqI,EAASrI,GAAtB,UACE,mBACEvD,UAAW4L,EAAS5F,OACnB,IACH,cAACwF,EAAA,EAAD,CACEnK,GAAIuK,EAAS3F,YAtBrB,UACUgF,EAAK5J,GADf,YACqBqK,EADrB,YAC8BG,cAiC1C,eAAC,IAAD,CAAStI,GAAIkI,EAAIlI,GAAjB,UACE,mBAAGvD,UAAWyL,EAAIzF,OAAS,IAC3B,cAACwF,EAAA,EAAD,CAAcnK,GAAIoK,EAAIxF,YAxF5B,UACUgF,EAAK5J,GADf,YACqBqK,QAhBtBT,EAAK5J,oB,GA1YVyK,aAqhBPC,cACb5J,aApBsB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAME,EAAe,EAAfA,SAU/B,MAAO,CACLC,oBAJEH,EALFG,oBAUAgF,oBALEnF,EAJFmF,oBAUAD,qBANElF,EAHFkF,qBAUA9E,eAPEJ,EAFFI,eAUAC,wBAREL,EADFK,wBAUAE,YAPsBL,EAAhBK,eAWiB,CACvBE,4BACAoH,2BACA+B,6BACA/D,oCAJF9F,CAKGmE,I,kBCtgBU2F,EAnCA,WACb,OACE,wBAAQjM,UAAU,cAAlB,SACE,qBAAKA,UAAU,iBAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,eAACkM,EAAA,EAAD,WACE,cAAC,IAAD,CAAOC,IAAI,KAAKC,GAAG,IAAnB,SACE,mBAAGpM,UAAU,kBAAb,SACE,cAACwL,EAAA,EAAD,CAAcnK,GAAG,0BAIrB,cAAC,IAAD,CAAOrB,UAAU,6BAAjB,SACE,oBAAIA,UAAU,mCAAd,SACE,qBAAIA,UAAU,uBAAd,yBACe,IACb,cAAC,IAAD,CACEA,UAAU,WACVuD,GAAG,8BACH3B,SAAU,GACVK,OAAO,SACPsJ,IAAI,aALN,wCCIHQ,cACb5J,aAPsB,SAAC,GAEvB,MAAO,CAAEI,oBAF2B,EAAXH,KACjBG,uBAGe,GAGvBJ,EAnBgB,SAAC,GAAgD,IAA9CI,EAA6C,EAA7CA,oBAAqB8J,EAAwB,EAAxBA,SAAUnJ,EAAc,EAAdA,QAClD,OACE,sBAAK7B,GAAG,gBAAgBrB,UAAWuC,EAAnC,UACE,cAAC,EAAD,CAAQW,QAASA,IACjB,cAAC,EAAD,IACA,+BACE,qBAAKlD,UAAU,kBAAf,SAAkCqM,MAEpC,cAAC,EAAD,W,QCRAC,EAAYC,gBAAK,kBACrB,gEAEIC,EAAUD,gBAAK,kBACnB,wDAEIE,EAASF,gBAAK,kBAClB,+DAEIG,EAAUH,gBAAK,kBACnB,+DAEII,EAAWJ,gBAAK,kBACpB,+DAEIK,EAAcL,gBAAK,kBACvB,+DAEIM,EAASN,gBAAK,kBAClB,kCAyDaR,sBAAW5J,aALF,SAAC,GAEvB,MAAO,CAAEI,oBAF2B,EAAXH,KACjBG,uBAIyC,GAAzBJ,EAtDd,SAAC,GAAe,IAAb2K,EAAY,EAAZA,MACb,OACE,cAAC,EAAD,UACE,qBAAK9M,UAAU,oBAAf,SACE,cAAC,WAAD,CAAU+M,SAAU,qBAAK/M,UAAU,YAAnC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEgN,OAAK,EACLC,KAAI,UAAKH,EAAMI,IAAX,KACJ3J,GAAE,UAAKuJ,EAAMI,IAAX,gBAEJ,cAAC,IAAD,CACEC,KAAI,UAAKL,EAAMI,IAAX,cACJE,OAAQ,SAACvN,GAAD,OAAW,cAACyM,EAAD,eAAezM,OAEpC,cAAC,IAAD,CACEsN,KAAI,UAAKL,EAAMI,IAAX,SACJG,UAAW,SAACxN,GAAD,OAAW,cAAC2M,EAAD,eAAa3M,KACnCsG,MAAO,CAACC,IAASC,SAEnB,cAAC,IAAD,CACE8G,KAAI,UAAKL,EAAMI,IAAX,WACJE,OAAQ,SAACvN,GAAD,OAAW,cAAC4M,EAAD,eAAY5M,OAEjC,cAAC,IAAD,CACEsN,KAAI,UAAKL,EAAMI,IAAX,aACJE,OAAQ,SAACvN,GAAD,OAAW,cAAC6M,EAAD,eAAa7M,OAElC,cAAC,IAAD,CACEsN,KAAI,UAAKL,EAAMI,IAAX,aACJE,OAAQ,SAACvN,GAAD,OAAW,cAAC8M,EAAD,eAAc9M,OAEnC,cAAC,IAAD,CACEsN,KAAI,UAAKL,EAAMI,IAAX,iBACJE,OAAQ,SAACvN,GAAD,OAAW,cAAC+M,EAAD,eAAiB/M,OAEtC,cAAC,IAAD,CACEsN,KAAI,UAAKL,EAAMI,IAAX,WACJE,OAAQ,SAACvN,GAAD,OAAW,cAACgN,EAAD,eAAYhN,OAGjC,cAAC,IAAD,CAAU0D,GAAG","file":"static/js/views-app.458bcf9e.chunk.js","sourcesContent":["import React from 'react';\nimport { Col } from 'reactstrap';\n\nconst Colxx = (props) => (\n  <Col {...props} widths={['xxs', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl']} />\n);\nconst Separator = ({ className }) => (\n  <div className={`separator ${className}`} />\n);\nexport { Colxx, Separator };\n","import React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nconst InjectMassage = (props) => <FormattedMessage {...props} />;\n\nexport default injectIntl(InjectMassage, {\n  withRef: false,\n});\n","import React from 'react';\n\nconst MenuIcon = () => {\n  return (\n    <>\n      <svg\n        className=\"main\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 9 17\"\n      >\n        <rect x=\"0.48\" y=\"0.5\" width=\"7\" height=\"1\" />\n        <rect x=\"0.48\" y=\"7.5\" width=\"7\" height=\"1\" />\n        <rect x=\"0.48\" y=\"15.5\" width=\"7\" height=\"1\" />\n      </svg>\n      <svg\n        className=\"sub\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 18 17\"\n      >\n        <rect x=\"1.56\" y=\"0.5\" width=\"16\" height=\"1\" />\n        <rect x=\"1.56\" y=\"7.5\" width=\"16\" height=\"1\" />\n        <rect x=\"1.56\" y=\"15.5\" width=\"16\" height=\"1\" />\n      </svg>\n    </>\n  );\n};\n\nexport default MenuIcon;\n","import React from 'react';\n\nconst MobileMenuIcon = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 26 17\">\n      <rect x=\"0.5\" y=\"0.5\" width=\"25\" height=\"1\" />\n      <rect x=\"0.5\" y=\"7.5\" width=\"25\" height=\"1\" />\n      <rect x=\"0.5\" y=\"15.5\" width=\"25\" height=\"1\" />\n    </svg>\n  );\n};\n\nexport default MobileMenuIcon;\n","import React, { useState, useEffect } from 'react';\nimport Switch from 'rc-switch';\nimport 'rc-switch/static/index.css';\nimport { Tooltip } from 'reactstrap';\nimport { getCurrentColor, setCurrentColor } from '../../helpers/Utils';\n\nconst TopnavDarkSwitch = () => {\n  const [switchChecked, setSwitchChecked] = useState(false);\n  const [tooltipOpen, setTooltipOpen] = useState(false);\n\n  useEffect(() => {\n    const color = getCurrentColor();\n    setSwitchChecked(color.indexOf('dark') > -1);\n  }, []);\n\n  const changeMode = () => {\n    let color = getCurrentColor();\n\n    if (color.indexOf('dark') > -1) {\n      color = color.replace('dark', 'light');\n    } else if (color.indexOf('light') > -1) {\n      color = color.replace('light', 'dark');\n    }\n    setCurrentColor(color);\n    setSwitchChecked(color.indexOf('dark') > -1);\n    setTimeout(() => {\n      window.location.reload();\n    }, 500);\n  };\n\n  return (\n    <div className=\"d-none d-md-inline-block align-middle mr-3\">\n      <Switch\n        id=\"tooltip_switch\"\n        className=\"custom-switch custom-switch-primary custom-switch-small\"\n        checked={switchChecked}\n        onChange={changeMode}\n      />\n      <Tooltip\n        placement=\"left\"\n        isOpen={tooltipOpen}\n        target=\"tooltip_switch\"\n        toggle={() => setTooltipOpen(!tooltipOpen)}\n      >\n        Dark Mode\n      </Tooltip>\n    </div>\n  );\n};\nexport default TopnavDarkSwitch;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable no-use-before-define */\nimport React, { useState } from 'react';\nimport { injectIntl } from 'react-intl';\n\nimport {\n  UncontrolledDropdown,\n  DropdownItem,\n  DropdownToggle,\n  DropdownMenu,\n} from 'reactstrap';\n\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport {\n  setContainerClassnames,\n  clickOnMobileMenu,\n  logoutUser,\n} from '../../redux/actions';\n\nimport { isDarkSwitchActive } from '../../constants/defaultValues';\n\nimport { MobileMenuIcon, MenuIcon } from '../../components/svg';\n// import TopnavEasyAccess from './Topnav.EasyAccess';\nimport TopnavDarkSwitch from './Topnav.DarkSwitch';\n\nconst TopNav = ({\n  history,\n  containerClassnames,\n  menuClickCount,\n  currentUser,\n  selectedMenuHasSubItems,\n  setContainerClassnamesAction,\n  clickOnMobileMenuAction,\n  logoutUserAction,\n}) => {\n  const [isInFullScreen, setIsInFullScreen] = useState(false);\n  const [searchKeyword, setSearchKeyword] = useState('');\n\n  const { email, img } = currentUser;\n\n  const search = () => {\n    history.push(`/search?key=${searchKeyword}`);\n    setSearchKeyword('');\n  };\n\n  const isInFullScreenFn = () => {\n    return (\n      (document.fullscreenElement && document.fullscreenElement !== null) ||\n      (document.webkitFullscreenElement &&\n        document.webkitFullscreenElement !== null) ||\n      (document.mozFullScreenElement &&\n        document.mozFullScreenElement !== null) ||\n      (document.msFullscreenElement && document.msFullscreenElement !== null)\n    );\n  };\n\n  const handleDocumentClickSearch = (e) => {\n    let isSearchClick = false;\n    if (\n      e.target &&\n      e.target.classList &&\n      (e.target.classList.contains('navbar') ||\n        e.target.classList.contains('simple-icon-magnifier'))\n    ) {\n      isSearchClick = true;\n      if (e.target.classList.contains('simple-icon-magnifier')) {\n        search();\n      }\n    } else if (\n      e.target.parentElement &&\n      e.target.parentElement.classList &&\n      e.target.parentElement.classList.contains('search')\n    ) {\n      isSearchClick = true;\n    }\n\n    if (!isSearchClick) {\n      const input = document.querySelector('.mobile-view');\n      if (input && input.classList) input.classList.remove('mobile-view');\n      removeEventsSearch();\n      setSearchKeyword('');\n    }\n  };\n\n  const removeEventsSearch = () => {\n    document.removeEventListener('click', handleDocumentClickSearch, true);\n  };\n\n  const toggleFullScreen = () => {\n    const isFS = isInFullScreenFn();\n\n    const docElm = document.documentElement;\n    if (!isFS) {\n      if (docElm.requestFullscreen) {\n        docElm.requestFullscreen();\n      } else if (docElm.mozRequestFullScreen) {\n        docElm.mozRequestFullScreen();\n      } else if (docElm.webkitRequestFullScreen) {\n        docElm.webkitRequestFullScreen();\n      } else if (docElm.msRequestFullscreen) {\n        docElm.msRequestFullscreen();\n      }\n    } else if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.webkitExitFullscreen) {\n      document.webkitExitFullscreen();\n    } else if (document.mozCancelFullScreen) {\n      document.mozCancelFullScreen();\n    } else if (document.msExitFullscreen) {\n      document.msExitFullscreen();\n    }\n    setIsInFullScreen(!isFS);\n  };\n\n  const handleLogout = () => {\n    logoutUserAction(history);\n  };\n\n  const menuButtonClick = (e, _clickCount, _conClassnames) => {\n    e.preventDefault();\n\n    setTimeout(() => {\n      const event = document.createEvent('HTMLEvents');\n      event.initEvent('resize', false, false);\n      window.dispatchEvent(event);\n    }, 350);\n    setContainerClassnamesAction(\n      _clickCount + 1,\n      _conClassnames,\n      selectedMenuHasSubItems\n    );\n  };\n\n  const mobileMenuButtonClick = (e, _containerClassnames) => {\n    e.preventDefault();\n    clickOnMobileMenuAction(_containerClassnames);\n  };\n\n  const handleResetPassword = () => {\n    history.push(`/user/reset-password`);\n  };\n\n  return (\n    <nav className=\"navbar fixed-top\">\n      <div className=\"d-flex align-items-center navbar-left\">\n        <NavLink\n          to=\"#\"\n          location={{}}\n          className=\"menu-button d-none d-md-block\"\n          onClick={(e) =>\n            menuButtonClick(e, menuClickCount, containerClassnames)\n          }\n        >\n          <MenuIcon />\n        </NavLink>\n        <NavLink\n          to=\"#\"\n          location={{}}\n          className=\"menu-button-mobile d-xs-block d-sm-block d-md-none\"\n          onClick={(e) => mobileMenuButtonClick(e, containerClassnames)}\n        >\n          <MobileMenuIcon />\n        </NavLink>\n      </div>\n\n      <div className=\"navbar-right\">\n        {isDarkSwitchActive && <TopnavDarkSwitch />}\n        <div className=\"header-icons d-inline-block align-middle\">\n          <button\n            className=\"header-icon btn btn-empty d-none d-sm-inline-block\"\n            type=\"button\"\n            id=\"fullScreenButton\"\n            onClick={toggleFullScreen}\n          >\n            {isInFullScreen ? (\n              <i className=\"simple-icon-size-actual d-block\" />\n            ) : (\n              <i className=\"simple-icon-size-fullscreen d-block\" />\n            )}\n          </button>\n        </div>\n        <div className=\"user d-inline-block\">\n          <UncontrolledDropdown className=\"dropdown-menu-right\">\n            <DropdownToggle className=\"p-0\" color=\"empty\">\n              <span className=\"name mr-1\">{email}</span>\n              <span>\n                <img alt=\"Profile\" src={img} />\n              </span>\n            </DropdownToggle>\n            <DropdownMenu className=\"mt-3\" right>\n              <DropdownItem onClick={handleResetPassword}>\n                Reset Password\n              </DropdownItem>\n              <DropdownItem divider />\n              <DropdownItem onClick={() => handleLogout()}>\n                Sign out\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nconst mapStateToProps = ({ menu, settings, authUser }) => {\n  const { containerClassnames, menuClickCount, selectedMenuHasSubItems } = menu;\n  const { locale } = settings;\n  const { currentUser } = authUser;\n  return {\n    containerClassnames,\n    menuClickCount,\n    selectedMenuHasSubItems,\n    locale,\n    currentUser,\n  };\n};\n\nexport default injectIntl(\n  connect(mapStateToProps, {\n    setContainerClassnamesAction: setContainerClassnames,\n    clickOnMobileMenuAction: clickOnMobileMenu,\n    logoutUserAction: logoutUser,\n  })(TopNav)\n);\n","import { adminRoot, UserRole } from './defaultValues';\n\nconst data = [\n  {\n    id: 'dashboard',\n    icon: 'iconsminds-monitor-analytics',\n    label: 'menu.dashboard',\n    to: `${adminRoot}/dashboard`,\n  },\n  {\n    id: 'user',\n    icon: 'simple-icon-people',\n    label: 'menu.user',\n    to: `${adminRoot}/user`,\n    roles: [UserRole.Admin],\n  },\n  {\n    id: 'client',\n    icon: 'iconsminds-handshake',\n    label: 'menu.client',\n    to: `${adminRoot}/client`,\n  },\n  {\n    id: 'status',\n    icon: 'simple-icon-bell',\n    label: 'menu.status',\n    to: `${adminRoot}/status`,\n  },\n  {\n    id: 'referral',\n    icon: 'simple-icon-organization',\n    label: 'menu.referral',\n    to: `${adminRoot}/referral`,\n  },\n  {\n    id: 'category',\n    icon: 'simple-icon-grid',\n    label: 'menu.category',\n    to: `${adminRoot}/category`,\n  },\n  {\n    id: 'sub-category',\n    icon: 'simple-icon-list',\n    label: 'menu.sub-category',\n    to: `${adminRoot}/sub-category`,\n  },\n];\nexport default data;\n","/* eslint-disable react/no-array-index-key */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport { Nav, NavItem, Collapse } from 'reactstrap';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport classnames from 'classnames';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\nimport IntlMessages from '../../helpers/IntlMessages';\n\nimport {\n  setContainerClassnames,\n  addContainerClassname,\n  changeDefaultClassnames,\n  changeSelectedMenuHasSubItems,\n} from '../../redux/actions';\n\nimport menuItems from '../../constants/menu';\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedParentMenu: '',\n      viewingParentMenu: '',\n      collapsedMenus: [],\n    };\n  }\n\n  // eslint-disable-next-line react/sort-comp\n  handleWindowResize = (event) => {\n    if (event && !event.isTrusted) {\n      return;\n    }\n    const { containerClassnames } = this.props;\n    const nextClasses = this.getMenuClassesForResize(containerClassnames);\n    // eslint-disable-next-line react/destructuring-assignment\n    this.props.setContainerClassnames(\n      0,\n      nextClasses.join(' '),\n      // eslint-disable-next-line react/destructuring-assignment\n      this.props.selectedMenuHasSubItems\n    );\n  };\n\n  handleDocumentClick = (e) => {\n    const container = this.getContainer();\n    let isMenuClick = false;\n    if (\n      e.target &&\n      e.target.classList &&\n      (e.target.classList.contains('menu-button') ||\n        e.target.classList.contains('menu-button-mobile'))\n    ) {\n      isMenuClick = true;\n    } else if (\n      e.target.parentElement &&\n      e.target.parentElement.classList &&\n      (e.target.parentElement.classList.contains('menu-button') ||\n        e.target.parentElement.classList.contains('menu-button-mobile'))\n    ) {\n      isMenuClick = true;\n    } else if (\n      e.target.parentElement &&\n      e.target.parentElement.parentElement &&\n      e.target.parentElement.parentElement.classList &&\n      (e.target.parentElement.parentElement.classList.contains('menu-button') ||\n        e.target.parentElement.parentElement.classList.contains(\n          'menu-button-mobile'\n        ))\n    ) {\n      isMenuClick = true;\n    }\n    if (container.contains(e.target) || container === e.target || isMenuClick) {\n      return;\n    }\n    this.setState({\n      viewingParentMenu: '',\n    });\n    this.toggle();\n  };\n\n  getMenuClassesForResize = (classes) => {\n    const { menuHiddenBreakpoint, subHiddenBreakpoint } = this.props;\n    let nextClasses = classes.split(' ').filter((x) => x !== '');\n    const windowWidth = window.innerWidth;\n    if (windowWidth < menuHiddenBreakpoint) {\n      nextClasses.push('menu-mobile');\n    } else if (windowWidth < subHiddenBreakpoint) {\n      nextClasses = nextClasses.filter((x) => x !== 'menu-mobile');\n      if (\n        nextClasses.includes('menu-default') &&\n        !nextClasses.includes('menu-sub-hidden')\n      ) {\n        nextClasses.push('menu-sub-hidden');\n      }\n    } else {\n      nextClasses = nextClasses.filter((x) => x !== 'menu-mobile');\n      if (\n        nextClasses.includes('menu-default') &&\n        nextClasses.includes('menu-sub-hidden')\n      ) {\n        nextClasses = nextClasses.filter((x) => x !== 'menu-sub-hidden');\n      }\n    }\n    return nextClasses;\n  };\n\n  getContainer = () => {\n    // eslint-disable-next-line react/no-find-dom-node\n    return ReactDOM.findDOMNode(this);\n  };\n\n  toggle = () => {\n    const hasSubItems = this.getIsHasSubItem();\n    // eslint-disable-next-line react/destructuring-assignment\n    this.props.changeSelectedMenuHasSubItems(hasSubItems);\n    const { containerClassnames, menuClickCount } = this.props;\n    const currentClasses = containerClassnames\n      ? containerClassnames.split(' ').filter((x) => x !== '')\n      : '';\n    let clickIndex = -1;\n\n    if (!hasSubItems) {\n      if (\n        currentClasses.includes('menu-default') &&\n        (menuClickCount % 4 === 0 || menuClickCount % 4 === 3)\n      ) {\n        clickIndex = 1;\n      } else if (\n        currentClasses.includes('menu-sub-hidden') &&\n        (menuClickCount === 2 || menuClickCount === 3)\n      ) {\n        clickIndex = 0;\n      } else if (\n        currentClasses.includes('menu-hidden') ||\n        currentClasses.includes('menu-mobile')\n      ) {\n        clickIndex = 0;\n      }\n    } else if (\n      currentClasses.includes('menu-sub-hidden') &&\n      menuClickCount === 3\n    ) {\n      clickIndex = 2;\n    } else if (\n      currentClasses.includes('menu-hidden') ||\n      currentClasses.includes('menu-mobile')\n    ) {\n      clickIndex = 0;\n    }\n    if (clickIndex >= 0) {\n      // eslint-disable-next-line react/destructuring-assignment\n      this.props.setContainerClassnames(\n        clickIndex,\n        containerClassnames,\n        hasSubItems\n      );\n    }\n  };\n\n  handleProps = () => {\n    this.addEvents();\n  };\n\n  addEvents = () => {\n    ['click', 'touchstart', 'touchend'].forEach((event) =>\n      document.addEventListener(event, this.handleDocumentClick, true)\n    );\n  };\n\n  removeEvents = () => {\n    ['click', 'touchstart', 'touchend'].forEach((event) =>\n      document.removeEventListener(event, this.handleDocumentClick, true)\n    );\n  };\n\n  setSelectedLiActive = (callback) => {\n    const oldli = document.querySelector('.sub-menu  li.active');\n    if (oldli != null) {\n      oldli.classList.remove('active');\n    }\n\n    const oldliSub = document.querySelector('.third-level-menu  li.active');\n    if (oldliSub != null) {\n      oldliSub.classList.remove('active');\n    }\n\n    /* set selected parent menu */\n    const selectedSublink = document.querySelector(\n      '.third-level-menu  a.active'\n    );\n    if (selectedSublink != null) {\n      selectedSublink.parentElement.classList.add('active');\n    }\n\n    const selectedlink = document.querySelector('.sub-menu  a.active');\n    if (selectedlink != null) {\n      selectedlink.parentElement.classList.add('active');\n      this.setState(\n        {\n          selectedParentMenu: selectedlink.parentElement.parentElement.getAttribute(\n            'data-parent'\n          ),\n        },\n        callback\n      );\n    } else {\n      const selectedParentNoSubItem = document.querySelector(\n        '.main-menu  li a.active'\n      );\n      if (selectedParentNoSubItem != null) {\n        this.setState(\n          {\n            selectedParentMenu: selectedParentNoSubItem.getAttribute(\n              'data-flag'\n            ),\n          },\n          callback\n        );\n        // eslint-disable-next-line react/destructuring-assignment\n      } else if (this.state.selectedParentMenu === '') {\n        this.setState(\n          {\n            selectedParentMenu: menuItems[0].id,\n          },\n          callback\n        );\n      }\n    }\n  };\n\n  setHasSubItemStatus = () => {\n    const hasSubmenu = this.getIsHasSubItem();\n    // eslint-disable-next-line react/destructuring-assignment\n    this.props.changeSelectedMenuHasSubItems(hasSubmenu);\n    this.toggle();\n  };\n\n  getIsHasSubItem = () => {\n    const { selectedParentMenu } = this.state;\n    const menuItem = menuItems.find((x) => x.id === selectedParentMenu);\n    if (menuItem)\n      return !!(menuItem && menuItem.subs && menuItem.subs.length > 0);\n    return false;\n  };\n\n  // eslint-disable-next-line react/sort-comp\n  componentDidUpdate(prevProps) {\n    // eslint-disable-next-line react/destructuring-assignment\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      this.setSelectedLiActive(this.setHasSubItemStatus);\n\n      window.scrollTo(0, 0);\n    }\n    this.handleProps();\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleWindowResize);\n    this.handleWindowResize();\n    this.handleProps();\n    this.setSelectedLiActive(this.setHasSubItemStatus);\n  }\n\n  componentWillUnmount() {\n    this.removeEvents();\n    window.removeEventListener('resize', this.handleWindowResize);\n  }\n\n  openSubMenu = (e, menuItem) => {\n    const selectedParent = menuItem.id;\n    const hasSubMenu = menuItem.subs && menuItem.subs.length > 0;\n    // eslint-disable-next-line react/destructuring-assignment\n    this.props.changeSelectedMenuHasSubItems(hasSubMenu);\n    if (!hasSubMenu) {\n      this.setState({\n        viewingParentMenu: selectedParent,\n        selectedParentMenu: selectedParent,\n      });\n      this.toggle();\n    } else {\n      e.preventDefault();\n\n      const { containerClassnames, menuClickCount } = this.props;\n      const currentClasses = containerClassnames\n        ? containerClassnames.split(' ').filter((x) => x !== '')\n        : '';\n\n      if (!currentClasses.includes('menu-mobile')) {\n        if (\n          currentClasses.includes('menu-sub-hidden') &&\n          (menuClickCount === 2 || menuClickCount === 0)\n        ) {\n          // eslint-disable-next-line react/destructuring-assignment\n          this.props.setContainerClassnames(3, containerClassnames, hasSubMenu);\n        } else if (\n          currentClasses.includes('menu-hidden') &&\n          (menuClickCount === 1 || menuClickCount === 3)\n        ) {\n          // eslint-disable-next-line react/destructuring-assignment\n          this.props.setContainerClassnames(2, containerClassnames, hasSubMenu);\n        } else if (\n          currentClasses.includes('menu-default') &&\n          !currentClasses.includes('menu-sub-hidden') &&\n          (menuClickCount === 1 || menuClickCount === 3)\n        ) {\n          // eslint-disable-next-line react/destructuring-assignment\n          this.props.setContainerClassnames(0, containerClassnames, hasSubMenu);\n        }\n      } else {\n        // eslint-disable-next-line react/destructuring-assignment\n        this.props.addContainerClassname(\n          'sub-show-temporary',\n          containerClassnames\n        );\n      }\n      this.setState({\n        viewingParentMenu: selectedParent,\n      });\n    }\n  };\n\n  toggleMenuCollapse = (e, menuKey) => {\n    e.preventDefault();\n\n    const { collapsedMenus } = this.state;\n    if (collapsedMenus.indexOf(menuKey) > -1) {\n      this.setState({\n        collapsedMenus: collapsedMenus.filter((x) => x !== menuKey),\n      });\n    } else {\n      collapsedMenus.push(menuKey);\n      this.setState({\n        collapsedMenus,\n      });\n    }\n    return false;\n  };\n\n  // eslint-disable-next-line no-shadow\n  filteredList = (menuItems) => {\n    const { currentUser } = this.props;\n    if (currentUser) {\n      return menuItems.filter(\n        (x) => (x.roles && x.roles.includes(currentUser.role)) || !x.roles\n      );\n    }\n    return menuItems;\n  };\n\n  render() {\n    const {\n      selectedParentMenu,\n      viewingParentMenu,\n      collapsedMenus,\n    } = this.state;\n    return (\n      <div className=\"sidebar\">\n        <div className=\"main-menu\">\n          <div className=\"scroll\">\n            <PerfectScrollbar\n              options={{ suppressScrollX: true, wheelPropagation: false }}\n            >\n              <Nav vertical className=\"list-unstyled\">\n                {menuItems &&\n                  this.filteredList(menuItems).map((item) => {\n                    return (\n                      <NavItem\n                        key={item.id}\n                        className={classnames({\n                          active:\n                            (selectedParentMenu === item.id &&\n                              viewingParentMenu === '') ||\n                            viewingParentMenu === item.id,\n                        })}\n                      >\n                        {item.newWindow ? (\n                          <a\n                            href={item.to}\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                          >\n                            <i className={item.icon} />{' '}\n                            <IntlMessages id={item.label} />\n                          </a>\n                        ) : (\n                          <NavLink\n                            to={item.to}\n                            onClick={(e) => this.openSubMenu(e, item)}\n                            data-flag={item.id}\n                          >\n                            <i className={item.icon} />{' '}\n                            <IntlMessages id={item.label} />\n                          </NavLink>\n                        )}\n                      </NavItem>\n                    );\n                  })}\n              </Nav>\n            </PerfectScrollbar>\n          </div>\n        </div>\n\n        <div className=\"sub-menu\">\n          <div className=\"scroll\">\n            <PerfectScrollbar\n              options={{ suppressScrollX: true, wheelPropagation: false }}\n            >\n              {menuItems &&\n                this.filteredList(menuItems).map((item) => {\n                  return (\n                    <Nav\n                      key={item.id}\n                      className={classnames({\n                        'd-block':\n                          // eslint-disable-next-line react/destructuring-assignment\n                          (this.state.selectedParentMenu === item.id &&\n                            // eslint-disable-next-line react/destructuring-assignment\n                            this.state.viewingParentMenu === '') ||\n                          // eslint-disable-next-line react/destructuring-assignment\n                          this.state.viewingParentMenu === item.id,\n                      })}\n                      data-parent={item.id}\n                    >\n                      {item.subs &&\n                        this.filteredList(item.subs).map((sub, index) => {\n                          return (\n                            <NavItem\n                              key={`${item.id}_${index}`}\n                              className={`${\n                                sub.subs && sub.subs.length > 0\n                                  ? 'has-sub-item'\n                                  : ''\n                              }`}\n                            >\n                              {/* eslint-disable-next-line no-nested-ternary */}\n                              {sub.newWindow ? (\n                                <a\n                                  href={sub.to}\n                                  rel=\"noopener noreferrer\"\n                                  target=\"_blank\"\n                                >\n                                  <i className={sub.icon} />{' '}\n                                  <IntlMessages id={sub.label} />\n                                </a>\n                              ) : sub.subs && sub.subs.length > 0 ? (\n                                <>\n                                  <NavLink\n                                    className={`rotate-arrow-icon opacity-50 ${\n                                      collapsedMenus.indexOf(\n                                        `${item.id}_${index}`\n                                      ) === -1\n                                        ? ''\n                                        : 'collapsed'\n                                    }`}\n                                    to={sub.to}\n                                    id={`${item.id}_${index}`}\n                                    onClick={(e) =>\n                                      this.toggleMenuCollapse(\n                                        e,\n                                        `${item.id}_${index}`\n                                      )\n                                    }\n                                  >\n                                    <i className=\"simple-icon-arrow-down\" />{' '}\n                                    <IntlMessages id={sub.label} />\n                                  </NavLink>\n\n                                  <Collapse\n                                    isOpen={\n                                      collapsedMenus.indexOf(\n                                        `${item.id}_${index}`\n                                      ) === -1\n                                    }\n                                  >\n                                    <Nav className=\"third-level-menu\">\n                                      {this.filteredList(sub.subs).map(\n                                        (thirdSub, thirdIndex) => {\n                                          return (\n                                            <NavItem\n                                              key={`${item.id}_${index}_${thirdIndex}`}\n                                            >\n                                              {thirdSub.newWindow ? (\n                                                <a\n                                                  href={thirdSub.to}\n                                                  rel=\"noopener noreferrer\"\n                                                  target=\"_blank\"\n                                                >\n                                                  <i\n                                                    className={thirdSub.icon}\n                                                  />{' '}\n                                                  <IntlMessages\n                                                    id={thirdSub.label}\n                                                  />\n                                                </a>\n                                              ) : (\n                                                <NavLink to={thirdSub.to}>\n                                                  <i\n                                                    className={thirdSub.icon}\n                                                  />{' '}\n                                                  <IntlMessages\n                                                    id={thirdSub.label}\n                                                  />\n                                                </NavLink>\n                                              )}\n                                            </NavItem>\n                                          );\n                                        }\n                                      )}\n                                    </Nav>\n                                  </Collapse>\n                                </>\n                              ) : (\n                                <NavLink to={sub.to}>\n                                  <i className={sub.icon} />{' '}\n                                  <IntlMessages id={sub.label} />\n                                </NavLink>\n                              )}\n                            </NavItem>\n                          );\n                        })}\n                    </Nav>\n                  );\n                })}\n            </PerfectScrollbar>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ menu, authUser }) => {\n  const {\n    containerClassnames,\n    subHiddenBreakpoint,\n    menuHiddenBreakpoint,\n    menuClickCount,\n    selectedMenuHasSubItems,\n  } = menu;\n\n  const { currentUser } = authUser;\n  return {\n    containerClassnames,\n    subHiddenBreakpoint,\n    menuHiddenBreakpoint,\n    menuClickCount,\n    selectedMenuHasSubItems,\n    currentUser,\n  };\n};\nexport default withRouter(\n  connect(mapStateToProps, {\n    setContainerClassnames,\n    addContainerClassname,\n    changeDefaultClassnames,\n    changeSelectedMenuHasSubItems,\n  })(Sidebar)\n);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Row } from 'reactstrap';\nimport { Colxx } from '../../components/common/CustomBootstrap';\nimport IntlMessages from '../../helpers/IntlMessages';\n\nconst Footer = () => {\n  return (\n    <footer className=\"page-footer\">\n      <div className=\"footer-content\">\n        <div className=\"container-fluid\">\n          <Row>\n            <Colxx xxs=\"12\" sm=\"6\">\n              <p className=\"mb-0 text-muted\">\n                <IntlMessages id=\"general.copyright\" />\n              </p>\n            </Colxx>\n\n            <Colxx className=\"col-sm-6 d-none d-sm-block\">\n              <ul className=\"breadcrumb pt-0 pr-0 float-right\">\n                <li className=\"breadcrumb-item mb-0\">\n                  Developed by{' '}\n                  <NavLink\n                    className=\"btn-link\"\n                    to=\"https://www.techlance.codes\"\n                    location={{}}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    Techlance\n                  </NavLink>\n                </li>\n              </ul>\n            </Colxx>\n          </Row>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport TopNav from '../containers/navs/Topnav';\nimport Sidebar from '../containers/navs/Sidebar';\nimport Footer from '../containers/navs/Footer';\n\nconst AppLayout = ({ containerClassnames, children, history }) => {\n  return (\n    <div id=\"app-container\" className={containerClassnames}>\n      <TopNav history={history} />\n      <Sidebar />\n      <main>\n        <div className=\"container-fluid\">{children}</div>\n      </main>\n      <Footer />\n    </div>\n  );\n};\nconst mapStateToProps = ({ menu }) => {\n  const { containerClassnames } = menu;\n  return { containerClassnames };\n};\nconst mapActionToProps = {};\n\nexport default withRouter(\n  connect(mapStateToProps, mapActionToProps)(AppLayout)\n);\n","import React, { lazy, Suspense } from 'react';\nimport { Route, withRouter, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport AppLayout from '../../layout/AppLayout';\nimport { ProtectedRoute } from '../../helpers/authHelper';\nimport { UserRole } from '../../constants/defaultValues';\n\nconst Dashboard = lazy(() =>\n  import(/* webpackChunkName: \"views-home\" */ './dashboard')\n);\nconst Account = lazy(() =>\n  import(/* webpackChunkName: \"viwes-account\" */ './account')\n);\nconst Status = lazy(() =>\n  import(/* webpackChunkName: \"viwes-status\" */ './status')\n);\nconst Service = lazy(() =>\n  import(/* webpackChunkName: \"viwes-status\" */ './service')\n);\nconst Category = lazy(() =>\n  import(/* webpackChunkName: \"viwes-status\" */ './category')\n);\nconst SubCategory = lazy(() =>\n  import(/* webpackChunkName: \"viwes-status\" */ './sub-category')\n);\nconst Client = lazy(() =>\n  import(/* webpackChunkName: \"viwes-client\" */ './client')\n);\n\nconst App = ({ match }) => {\n  return (\n    <AppLayout>\n      <div className=\"dashboard-wrapper\">\n        <Suspense fallback={<div className=\"loading\" />}>\n          <Switch>\n            <Redirect\n              exact\n              from={`${match.url}/`}\n              to={`${match.url}/dashboard`}\n            />\n            <Route\n              path={`${match.url}/dashboard`}\n              render={(props) => <Dashboard {...props} />}\n            />\n            <ProtectedRoute\n              path={`${match.url}/user`}\n              component={(props) => <Account {...props} />}\n              roles={[UserRole.Admin]}\n            />\n            <Route\n              path={`${match.url}/status`}\n              render={(props) => <Status {...props} />}\n            />\n            <Route\n              path={`${match.url}/referral`}\n              render={(props) => <Service {...props} />}\n            />\n            <Route\n              path={`${match.url}/category`}\n              render={(props) => <Category {...props} />}\n            />\n            <Route\n              path={`${match.url}/sub-category`}\n              render={(props) => <SubCategory {...props} />}\n            />\n            <Route\n              path={`${match.url}/client`}\n              render={(props) => <Client {...props} />}\n            />\n\n            <Redirect to=\"/error\" />\n          </Switch>\n        </Suspense>\n      </div>\n    </AppLayout>\n  );\n};\n\nconst mapStateToProps = ({ menu }) => {\n  const { containerClassnames } = menu;\n  return { containerClassnames };\n};\n\nexport default withRouter(connect(mapStateToProps, {})(App));\n"],"sourceRoot":""}